%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 15.0.2%%For: (Lo\625c HORELLOU) ()%%Title: (billet-picasso.ai)%%CreationDate: 05/03/12 16:36%%Canvassize: 16383%%BoundingBox: -1 -1 511 313%%HiResBoundingBox: -0.5 -0.5 510.7363 312.311%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Rep\616rage])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 255.5 155.3105 255.5 155.3105%AI3_TileBox: -140.8799 -150.0947 651.1201 461.9053%AI3_DocumentPreview: None%AI5_ArtSize: 510.2402 311.8105%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -216.6665 479.4771 1.5 1572 871 26 1 0 66 158 0 0%AI5_OpenViewLayers: 73%%PageOrigin:0 0%AI7_GridSettings: 40 4 40 4 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 80 8%%BeginData: 13030 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C4560143C143C363C143C363C143C363C143C363C143C363C143C363C%143C363C143C363C143C363C143C363C143C363C143C363C143C363C143C%363C143C363C143C363C143C363C143C363C143C363C143C363C143C363C%143C363C143C363C143C363C143C363C143C363C143C363C143C363C143C%363C143C363C143C363636FD041413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%141413141414131414141314141413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%14141314141413141414131414141314143636FD81141314133C5A855A14%3661131413FD05141314131414140D141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%141413141414131414141314141413141414131414141314141413141414%13141414131414141314141413141414131414141314141413363C141414%85856160FF8585AFFD0614FF85FD06143DFD64143614140D60FF36843C84%FFA8AF14A9A861366084FF14AF36AF36AFAF601414131414141314141413%141414131414141314141413141414131414141314141413141414131414%141314141413141414131414141314141413141414131414141314141413%14141413141414131414141314141413141414131414141314141413363C%14145AFFAFFF84AFFD06FF84AFFFFFFF61A9FD04AF3C60FD641413141314%6085A8FFA83C60FFFFFF5A3C36AF84FF84FF848584AFA8600D1414141314%141413141414131414141314141413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%141413141414131414141314141413141414131414141314141413141414%131413363CFD0514FFA9140E61FF8BAFFF85FF851460FF853DA9FFFFFF36%6160FD6714FFFFFF8485608560AFA91414361414603636FFFF85A8FFFF85%141413141414131414141314141413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%141413141414131414141314141413141414131414141314141413141414%13141414131414363614141436A9FF608584FD04FF61FD08146085141436%3CFD65141314131413140D14133636140D14141413141414131413141314%131413141414131414141314141413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%141413141414131414141314141413141414131414141314141413141414%131414141314141413363CFD811413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%141413141414131414141314141413141414131414141314141413141414%131414141314141413141414131414141314141413141414131414141314%1414131414141314141413141414131414140D3685848584858485848584%8584858485848B8485848584858485848584858485848584858485848584%858485848584858485848584858485848584858485848584858485848584%8584858485848B8485848584858485848584858485848584858485848584%8B848584858485848584858485848584858485848584858485848584CAFF%CFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFCFFFCAFFFFFF%CAFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCAFFCFFFCAFFCFFFCAFFFFFF%CAFFCFFFCAFFCFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFF%FFFFCAFD82FFAFA8FFAFFFA8FFFFFFA8FFAFFFA8FFA9FFA8FFA8FFA8FFFF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFAFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA9FFA8%FFA9FFA8FFA9FFA8FFA9FFA8FD14FFAFFD4BFFAFFD22FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD81FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA9FFA8%FFA8FFA8FFFFFFA8FFA9FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA9FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFAFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFAFFFA8FFA9FFA8FD44FFAFFD13FFAFFD27FFA8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD%81FFA8FFAFFFA8FFAFFFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA9FFA8FFA9FF%A8FFA9FFA8FFFFFFA8FFA8FFA8FFAFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FF%A8FFA8FFFFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA8FF%A8FFA9FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFFFFA8FFA8FFA8FFA9FFA8FF%A9FFA8FFA8FFA8FD68FFAFFD1AFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD81FFA8FFA8FFA9FF%A8FFAFFFA8FFAFFFA8FFA9FFA8FFA9FFA8FFA9FFA8FFAFFFA8FFA9FFA8FF%A8FFA8FFAFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFF%A8FFA8FFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA9FFA8FFAFFF%A8FD3CFFAFFD33FFAFFD0FFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD81FFA8FFFFFFA8FFFF%FFA8FFAFFFA8FFAFFFA8FFA9FFA8FFAFFFA8FFA9FFA8FFAFFFA8FFA9FFA8%FFA9FFA8FFAFFFA8FFA9FFA8FFAFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFF%FFA8FFA8FFA8FFFFFFA8FFA9FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA9FFA8%FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAF%FD56FFAFFD2AFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD81FFA8FFA8FFFFFFA8FFAFFFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFAFFFA8%FFA9FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFAFFFA8FFA8FFA8FFFFFFA8FFA8%FFA8FFAFFFA8FFA8FFA8FFFFFFA8FFA9FFA8FFAFFFA8FFA8FFA8FFA8FFA8%FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFFFFFA8FFFFFFA8FD40FFA8FD3F%FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FD80FFAFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8%FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFFFFFA8FFA9%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8%FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFA8%FFA8FFA9FFA8FFFFFFA8FFA8FFA8FFA8FFA8FD80FFAFFFFFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FD81FFA8FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFF%A8FFA9FFA8FFA9FFA8FFAFFFA8FFA9FFA8FFA8FFA8FFAFFFA8FFAFFFA8FF%A9FFA8FFA9FFA8FFA8FFA8FFFFFFA8FFA9FFA8FFA8FFA8FFFFFFA8FFA8FF%A8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FF%A8FFA8FFFFFFA8FFFFFFA8FD40FFA8FD3FFFA8A8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD81FFA8%FFFFFFA8FFAFFFA8FFA9FFA8FFAFFFA8FFAFFFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFFFFA8FFA8FFA8FFA9%FFA8FFAFFFA8FFA8FFA8FFFFFFA8FFAFFFA8FFA8FFA8FFAFFFA8FFAFFFA8%FFA8FFA8FD50FFAFFFFFFFAFFD0BFFAFFD0BFFA8FD16FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD81FFA8FFA8FFAFFFA8FFAFFFA8FFA9FFA8FFFFFFA8FFA9FFA8FFAFFFA8%FFAFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA9%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFAFFFA8%FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8%FFA8FFFFFFA8FFA9FFA8FD40FFA8FD13FFAFFFFFFFAFFD27FFA8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FD81FFA8FFA9FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA9FFA8FFAFFF%A8FFAFFFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFAFFFA8FFA9FFA8FF%A8FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD40FFAFFD27FFAFFFFFFFA9FD07FFA9FD0EFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FD81FFA8FFA8FFAFFFA8FFFFFFA8FFA9FFA8FFFFFFA8FF%A9FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FF%A8FFAFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FF%AFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFAFFFA8FFA8FFA8FFFFFF%A8FFA9FFA8FFA8FFA8FFA9FFA8FFA8FFA8FD4CFFAFFFFFFFAFFD0FFFAFFD%0FFFA9FD0FFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD80FFA9A8FFFFFFA8FFAFFFA8FFA9FF%A8FFAFFFA8FFFFFFA8FFAFFFA8FFAFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFAFFFA8FFA8FFA8FFAFFF%A8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA8FFA8FF%A9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FD44FFAFFD3EFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FD81FFA8FFA8FFFFFFA8FFAFFFA8FFA9FFA8FFA9FFA8FF%AFFFA8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFAFFFA8FFA8FF%A8FFA8FFA8FFFFFFA8FFA9FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFAFFFA8FF%A8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FD2CFFAFFD1FFFAFFD23FFAFFD%0FFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FD80FFA9A8FFA9FFA8FFA9FFA8FFAFFFA8FFA9FF%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFFA8FFA9FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA8FFA8FD83FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD%81FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FDFCFFFD04FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Vectorisation) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Module externe Adobe Enveloppe) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Module externe Peinture dynamique d'Adobe) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Module externe D\216grad\216 de formes Adobe) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Module externe Adobe Forme diffuse) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Module externe Adobe Forme de motif) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Module externe Forme artistique Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Module externe Forme calligraphique Adobe) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Symbolisme Adobe) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forme compos\216e Adobe) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp6 Bn%AI5_BeginGradient: (Coucher de soleil \(d\616sert\))(Coucher de soleil \(d\616sert\)) 0 6 Bd[<434546464748494B4B4C4D4E4E4F50515153545555565757585A5B5B5C5D5D5E5F5F6062616364646566666869696A6A6B6C6C6D6D6E6E6F707071717272737375757676777879797A7A7B7B7B7C7C7D7D7D7E7E7F7F7F808080808181818182828282><62636466666869696B6C6D6E6F70717273737475767778797A7B7C7C7D7E8081828383848586878888898A8B8C8C8D8F908F909193929494949596969799989A9B9B9C9E9D9F9FA0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A8AAA9A9AAAAAAABABABAB><2F302F303130313231323331323332333334353334353435363536363737363736373738393839383A39393839393A3B3A3C3B3C3A3C3B3C3C3B3C3C3D3C3D3C3D3D3D3D3E3E3F3F3E3E3F3F3E403F3F3F3F3E403F3F4040403E40413F3F4140404040><000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010102020202020202030203030303030404040405050505050505050506060607070707070707080808080908080808><C5C4C3C3C2C1C0BFBFBEBDBCBCBBBAB9B9B8B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A7A7A6A5A5A4A4A3A2A2A1A1A0A09F9E9E9D9D9C9C9B9B9A9A999998989797969695959594949393939292919191909090908F8F8F8F8E8E8E8E><A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8E8D8C8B8A8988888786858483838281807F7F7E7D7C7C7B7A7979787777767575747373727171706F6F6E6E6D6C6C6B6B6A6A696968686767666665656564646463636362626262><B4B3B3B2B1B1B0AFAFAEADADACABABAAA9A9A8A8A7A6A6A5A4A4A3A3A2A1A1A0A09F9F9E9D9D9C9C9B9B9A9A99999897979696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8B8A8A8A89898988888887878787868686868585858585>4 %_Br<262728292A2B2D2E2F30313233363738393A3C3D3D3E404143><4A4B4C4D4E4F4F5051525354555657585A5B5A5B5D5E5F6062><555352504F4D4D4B4A4847454242403F3C3B3A39363532312F>0<DEDDDCDBDAD9D8D7D6D5D4D3D2D0CFCECDCCCBCAC9C8C7C6C5><BDBCBBBAB9B8B8B7B6B5B4B3B2B1B0AFAEADADACABAAA9A8A7><A7A8A8A9A9AAAAABABACACADAEAEAFAFB0B0B1B1B2B2B3B3B4>4 %_Br<050708090A0C0D0E10111314151718191A1B1D1E1F20212322232526><333536353638393A3B3B3C3D3F403F4142434344454645464849484A><7C7A78797775747271716F6E6C6A6A6866646462605E5E5C5A585855>0<F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E1E0DFDE><D2D1D0D0CFCECDCCCBCBCAC9C8C7C7C6C5C4C4C3C2C1C1C0BFBEBEBD><929394949596979899999A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7>4 %_Br<0000000000000000000000000000000000000001000000000000010101020202010202030303030404040505040405050505050505050505040404050505><82807F7E7E7D7B7A79787776747372706F6F6E6D6C6A696866656362615F5E5D5C5B59585755545351504E4D4C4B494846454442403F3D3C3B3938373533><96959695959493949392939291919090908F8E8F8E8D8D8D8C8C8B8B8A8A8A89898888888787868686858685848383838282818080807F7E7F7E7D7C7D7C>0<F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8><9798999A9A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2><6869696A6A6B6C6C6D6E6E6F7070717272737474757676777878797A7B7B7C7D7D7E7F7F80818282838484858687878889898A8B8C8C8D8E8E8F90919192>4 %_Br<2B2A2A29282927262525242323222121201F1E1E1D1B1B1A1919181615151413131110100F0D0B0C0A09090806060503020200000000><9C9C9C9B9A9A999A9997989796969594959493939293929191908F908F8E8E8D8C8D8C8C8B8A8A898889888787868586858584838382><DEDCDBD9D8D7D6D4D3D2D0CFCECCCBC9C8C7C6C4C3C1C0BFBDBCBAB8B6B5B4B3B2B0AFADACABAAA9A8A6A5A4A2A2A09F9E9C9B999896><070606060505050504040403030303030202020201010101010101000000000000000000000000000000000000000000000000000000><CECFCFD0D1D1D2D3D4D4D5D6D6D7D8D8D9DADBDBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E6E7E8E9E9EAEBEBECEDEDEEEFF0F0F1F2F2F3><75767677787879797A7B7B7C7D7D7E7F7F8081818282838484858686878888898A8A8B8B8C8D8D8E8F8F909191929393949495969697><32333435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A5B5C5D5E5F606162636465666768>4 %_Br[0.509056 0.671748 0.25156 0.033326 0.556863 0.384314 0.521569 2 50 100 %_BS%_0.509056 0.671748 0.25156 0.033326 0.556863 0.384314 0.521569 2 50 100 Bs0.262547 0.382696 0.182864 0 0.772549 0.654902 0.705882 2 38.4615 71.0424 %_BS%_0.262547 0.382696 0.182864 0 0.772549 0.654902 0.705882 2 38.4615 71.0424 Bs0.14786 0.288518 0.334783 0 0.870588 0.741176 0.654902 2 50 53.6679 %_BS%_0.14786 0.288518 0.334783 0 0.870588 0.741176 0.654902 2 50 53.6679 Bs0.021485 0.201694 0.486519 0 0.972549 0.823529 0.572549 2 48 38.764 %_BS%_0.021485 0.201694 0.486519 0 0.972549 0.823529 0.572549 2 48 38.764 Bs0 0.508476 0.58999 0 0.952941 0.592157 0.407843 2 51.6129 13.1273 %_BS%_0 0.508476 0.58999 0 0.952941 0.592157 0.407843 2 51.6129 13.1273 Bs0.168124 0.612848 0.869535 0.027955 0.807843 0.458824 0.196078 2 50 0 %_BS%_0.168124 0.612848 0.869535 0.027955 0.807843 0.458824 0.196078 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (D\616grad\616 lin\616aire)(D\616grad\616 lin\616aire) 0 2 Bd[<0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F202121222324252627292A2B2C2D2E2F303233343637393A3B3C3D3E3F41424344454648494A4B4C4D4E4F5051525354565758595A5C5D5F606162626365666768696A6B6C6D6E6F707172737476777778797A7B7C7D7E7F80808182838384858686878889898A8B8C8D8E8F8F90919192939293949495969697989899999A9B9B9C9D9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAABABACACADADADAEAEAEAFAFB0B0B0AFB0B0B1B1B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B8B8B9B9B9BABA><0000010203040505060708090A0B0C0D0E0F10111213131415161718191A1B1C1C1D1E1F20212122232425262728292A2B2C2D2E2F2F303132343536373738393A3B3C3D3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061616263646566676769696A6B6C6C6D6E6F707071727273747575767778797A7B7C7C7D7E7F808081818283838485858686878888898A8A8B8C8D8D8E8F8F909091929293939495959696979898999A9A9B9C9C9D9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A7A7A8A9A9AAAAABACACADADAEAFB0B1B1B2B3B4B5B5><0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1A1B1C1D1E1F1F202122232425262728292A2B2B2C2D2E2F2F3031323233343536373738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4D4E4F50515253535455565758595A5B5B5C5D5D5E5F5E5F6060616262636465656667676868696A6A6B6C6D6E6F70707171727373747575767677787879797A7B7B7C7D7D7E7E7F8080818182828383848585868687888889898A8B8B8C8D8D8E8E8F8F909091919292939494959595969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010102020203030404040505050607070809090A0A0B0C0D0E0F1011111214151618191A1B1C1D1E1F212223242527282A2B2D2E2F3132343637393A3C3E3F41434546484A4C4D4F51535557595B5D5F61636567696B6D6E70717476787A7C7F818385878A8C8E919395979A9C9FA1A3A6A8AAADAFB2B4B7B9BBBEC0C2><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 Bs0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (D\616grad\616 radial)(D\616grad\616 radial) 1 2 Bd[<0000010304050607090A0B0C0E0F111214151718191A1B1C1D1F202121222324252627292A2B2C2D2E2F303233343637393A3B3C3D3E3F41424344454648494A4B4C4D4E4F5051525354565758595A5C5D5F606162626365666768696A6B6C6D6E6F707172737476777778797A7B7C7D7E7F80808182838384858686878889898A8B8C8D8E8F8F90919192939293949495969697989899999A9B9B9C9D9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9AAABABACACADADADAEAEAEAFAFB0B0B0AFB0B0B1B1B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B8B8B9B9B9BABA><0000010203040505060708090A0B0C0D0E0F10111213131415161718191A1B1C1C1D1E1F20212122232425262728292A2B2C2D2E2F2F303132343536373738393A3B3C3D3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061616263646566676769696A6B6C6C6D6E6F707071727273747575767778797A7B7C7C7D7E7F808081818283838485858686878888898A8A8B8C8D8D8E8F8F909091929293939495959696979898999A9A9B9C9C9D9D9E9E9F9FA0A1A1A2A3A3A4A5A5A6A7A7A8A9A9AAAAABACACADADAEAFB0B1B1B2B3B4B5B5><0000010203040505060708090A0A0B0C0D0E0F1010111213141515161718191A1A1B1C1D1E1F1F202122232425262728292A2B2B2C2D2E2F2F3031323233343536373738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4D4E4F50515253535455565758595A5B5B5C5D5D5E5F5E5F6060616262636465656667676868696A6A6B6C6D6E6F70707171727373747575767677787879797A7B7B7C7D7D7E7E7F8080818182828383848585868687888889898A8B8B8C8D8D8E8E8F8F909091919292939494959595969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010102020203030404040505050607070809090A0A0B0C0D0E0F1011111214151618191A1B1C1D1E1F212223242527282A2B2D2E2F3132343637393A3C3E3F41434546484A4C4D4F51535557595B5D5F61636567696B6D6E70717476787A7C7F818385878A8C8E919395979A9C9FA1A3A6A8AAADAFB2B4B7B9BBBEC0C2><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 0 0 1 1 1 2 50 0 %_BS%_0 0 0 0 1 1 1 2 50 0 Bs0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fondu noir)(Fondu noir) 0 2 Bd[0.7301290.7111160.6368350.7620510.1372550.1215690.125494 %_Br[0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 %_BS%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 100 Bs0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 0 %_BS%_0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial cuivr\616)(Radial cuivr\616) 1 4 Bd[<000000000101030304040605070606080709090A0A0B0B0C0C0D0E0F0F1010111112121313141415151616171718181A1A1C1C1D1D1F1F202020212122222323242426262727282829292A2A2B2B2D2D2E2E2F2F30><1112121314161517181A191A1B1D1C1D1F201F20222322232525252628282A292A2B2D2C2D2E2F2F30313233333436373838393A3C3B3C3D3F403F41424344444546474747494A4B4B4C4D4E4F4F50515253535455><292A2C2C2E2D2F30313234343536373838393B3C3C3D3F4040414342434445464748484A4B4C4C4E4E4F5051525354555658595A5B5C5D5E5F5F6162636364666768686A6B6B6C6D6F6F707172737475767779797A>0<FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6><F1F0F0EFEEEDEDECEBEAEAE9E8E7E7E6E5E4E4E3E2E1E1E0DFDEDEDDDCDBDADAD9D8D7D7D6D5D4D4D3D2D1D0D0CFCECDCCCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBABAB9B8B7B6B6B5B4B3B2B2B1B0><DBDAD9D8D7D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89>4 %_Br<3031313233333436353738393A3B3C3C3D3E3F3F404142424344444545464647474848494A4B4A4B4C4C4C4D4D4E4E4E4F4E4F4F504F5051515151525252525353535354545454555556555556565656575756575758575757585757585857575858575758><5556575858595A5B5C5D5E6061626364656465666768696A6B6C6D6E6F6F7171727374757675767778797A7B7B7C7E7E7F8081828284848586878888898A8B8C8C8E8E8F90919191929394949596979899999B9C9C9D9E9FA0A1A2A3A4A4A6A7A8A8AAABAC><7A7B7C7D7F7E7F808182838485868788898A8B8C8D8E8F909091919293949495969798999B9C9D9E9F9FA0A1A2A3A4A5A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B9BABBBDBEBFC0C1C3C4C5C7C8C9CBCCCDCFD0D1D3D4D5D6D8D9DADCDEDFE1E3E5E6><0000000000000000000000000001010101010102020203030303030404050506060707080809090A0B0C0C0D0D0E0F0F10111213141415161718191A1B1B1C1E1F1F20222425252728292A2B2D2E2F3031333334363738393B3C3D3E40414243454647494A><D6D5D5D4D3D3D2D1D1D0CFCECECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBEBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABAAAAA9A8A7A7A6A5A4A4A3A2A1A0A09F9E9D9D9C9B9A9A999897979695949493929191908F8E8E8D8C><B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A1A09F9E9D9C9B9A999897969594939291908F8E8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150><89888786858584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827>4 %_Br<585858585959595A5A5A5B5B5B5B5B5B5C5C5C5C5C5C5C5C5C5D5D5D5C5C5C5C5D5D5D5C5C5C5D5D5D5D5E5E5E5E5E5E5E5E5E5F5F60616161><ACACADAEB0B1B2B3B4B5B5B6B7B8B9BABBBCBDBEBFC0C1C2C4C5C6C7C9CBCCCDCED0D1D2D4D5D6D7D8D9DBDCDEDFE1E2E4E6E7E8E9EAECEDEE><E6E5E7E6E6E8E8E7E9E8E8E9E9E8EAEAE9EAE9E8EAE9EAECECEBEEEDECECEAEBEAE9EBEAEAECEBEAECEBE9ECEAE9EBEAE9EBEAE8E9E8E6E8E7><4A4C4D4F505253555658595B5C5E6061636566686A6B6D6F707274757677787A7B7D7F8082848587888A8C8D8F91939596989A9B9D9EA0A2A3><8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727171706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655><504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635343231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817><27272626262525252424242323232222222121212020201F1F1F1E1E1E1D1D1C1C1C1B1B1B1A1A1A1919191818181717171616161515151414>4 %_Br[0 0.066224 0.161929 0 1 0.945098 0.858824 2 51.0204 0.395812 %_BS%_0 0.066224 0.161929 0 1 0.945098 0.858824 2 51.0204 0.395812 Bs0.187747 0.332952 0.479042 0 0.839216 0.690196 0.537255 2 51.0204 30.8989 %_BS%_0.187747 0.332952 0.479042 0 0.839216 0.690196 0.537255 2 51.0204 30.8989 Bs0.343175 0.672847 0.903349 0.290562 0.54902 0.313726 0.152941 2 50 78.0899 %_BS%_0.343175 0.672847 0.903349 0.290562 0.54902 0.313726 0.152941 2 50 78.0899 Bs0.381567 0.934234 0.905089 0.639734 0.333333 0.090196 0.078431 2 50 100 %_BS%_0.381567 0.934234 0.905089 0.639734 0.333333 0.090196 0.078431 2 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Vignette noire adoucie)(Vignette noire adoucie) 1 3 Bd[0.7599450.7859770.6917370.901060.074510.0470590.0549024 %_Br0.7599450.7859770.6917370.901060.074510.0470590.0549024 %_Br[0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 68.3944 73.8792 %_BS%_0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 68.3944 73.8792 Bs0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 31.8603 88.7329 %_BS%_0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 31.8603 88.7329 Bs0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 50 100 %_BS%_0.759945 0.785977 0.691737 0.90106 0.07451 0.047059 0.054902 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Motif poisson)(Motif poisson) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 Xa 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 Xa 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 Xa 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 Xa 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 Xa 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 Xa 0 0.701869 0.906279 0 0.92549 0.411765 0.137255 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 Xa 0 0.944945 0.889738 0.000793 0.917647 0.113725 0.145098 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 Xa 0.809842 0.669245 0.778317 0.864164 0.047059 0.086275 0.058824 XA) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 Xa 0.927703 0.816953 0 0 0.12549 0.254902 0.596078 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4063.5 4459.895 m-3849.8999 4459.895 L-3849.8999 4452.0942 L-4063.5 4452.0942 L-4063.5 4459.895 Ln0 O0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa-4063.5 4455.9951 m-4053.4856 4458.4868 -4046.6863 4459.835 -4034.7007 4459.895 c-4021.7185 4459.96 -3956.6997 4459.895 y-3891.6816 4459.96 -3878.6997 4459.895 v-3866.7124 4459.835 -3859.9136 4458.4868 -3849.8999 4455.9951 C-3859.9136 4453.5029 -3866.7124 4452.1553 -3878.6997 4452.0942 c-3891.6816 4452.0288 -3956.6997 4452.0942 y-4021.7185 4452.0288 -4034.7007 4452.0942 v-4046.6863 4452.1553 -4053.4856 4453.5029 -4063.5 4455.9951 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7936 8332.46 m-7838.2451 8332.46 L-7838.2451 8311.7441 L-7936 8311.7441 L-7936 8332.46 Ln0 O0 g1 XR-7838.5586 8327.7783 m-7853.8247 8313.9902 -7871.5537 8334.9082 -7886.9277 8322.626 C-7885.4199 8316.9736 -7879.7598 8323.9277 -7877.5176 8319.2813 C-7877.4341 8317.6807 -7880.6313 8319.1807 -7880.5127 8317.0605 C-7878.6245 8313.6514 -7873.8955 8314.1484 -7872.5664 8318.1973 C-7866.3115 8316.2266 -7859.7734 8310.2842 -7853.7847 8312.0762 C-7852.2671 8313.4277 -7853.0708 8314.6113 -7852.6211 8315.8877 C-7845.2871 8311.4521 -7836.4644 8320.5879 -7838.5586 8327.7783 Cf-7882.2842 8329.3926 m-7882.8247 8329.7686 -7881.9277 8330.8799 -7882.2529 8331.3682 C-7884.3237 8330.6162 -7886.6919 8326.5381 -7888.4731 8323.7705 C-7888.2632 8325.2998 -7889.6641 8326.624 -7891.0781 8324.3926 C-7891.2383 8323.5752 -7890.3667 8323.2881 -7890.6729 8322.3965 C-7891.8306 8320.8281 -7892.8472 8322.3135 -7893.7798 8322.085 C-7894.3184 8321.3213 -7894.6143 8320.6777 -7894.6816 8320.1543 C-7888.5537 8317.334 -7881.9263 8329.1367 -7875.7456 8329.5625 C-7875.9048 8332.5752 -7879.8555 8334.2607 -7882.2842 8329.3926 Cfuu0 XR-7879.1602 8324.1201 m-7894.0142 8317.5801 -7915.4731 8321.8018 -7931.3687 8321.7793 c-7937.2988 8321.7725 -7926.8965 8321.7813 -7932.8267 8321.7861 cN0 O0 g-7876.8052 8322.8994 m-7894.1475 8315.7227 -7913.9341 8320.5146 -7932.0532 8320.4463 C-7932.8608 8321.333 -7933.6685 8322.2217 -7934.4751 8323.1074 C-7933.6973 8323.1074 -7932.9194 8323.1064 -7932.1421 8323.1133 C-7931.3345 8322.2256 -7930.5273 8321.3389 -7929.7202 8320.4521 C-7930.3516 8320.4609 -7930.9844 8320.4551 -7931.6157 8320.4551 c-7933.3735 8320.458 -7937.9165 8323.1221 -7934.0376 8323.1162 c-7933.4063 8323.1162 -7932.7734 8323.124 -7932.1421 8323.1133 c-7930.4155 8323.085 -7925.8184 8320.4834 -7929.7202 8320.4521 c-7930.4976 8320.4434 -7931.2759 8320.4463 -7932.0532 8320.4463 c-7933.8081 8320.4453 -7938.3574 8323.0928 -7934.4751 8323.1074 c-7917.1177 8323.1738 -7898.1025 8318.4736 -7881.5151 8325.3389 c-7880.1035 8325.9238 -7874.8081 8323.7266 -7876.8052 8322.8994 c-7876.8052 8322.8994 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 158)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7936 8332.46 m-7924.0078 8332.46 L-7924.0078 8321.8232 L-7936 8321.8232 L-7936 8332.46 Ln-7935.3218 8321.8232 m-7935.3218 8325.7725 L-7935.3218 8326.8076 L-7935.3218 8327.4463 L-7935.3218 8328.5449 L-7935.3218 8332.46 L-7924.6865 8332.46 L-7924.6865 8328.5449 L-7924.6865 8327.4463 L-7924.6865 8326.8076 L-7924.6865 8325.7725 L-7924.6865 8321.8232 L-7935.3218 8321.8232 Lnu0 O0.860075 0.849699 0.789548 1 0 0 0 Xa-7924.0078 8328.5449 m-7924.0078 8327.8994 L-7936 8327.9014 L-7936 8328.5449 L-7936 8328.6104 L-7924.0078 8328.6094 L-7924.0078 8328.5449 Lf-7924.0078 8325.7725 m-7936 8325.7725 L-7936 8326.4814 L-7924.0078 8326.4814 L-7924.0078 8325.7725 Lf0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa-7924.0078 8327.5117 m-7936 8327.5117 L-7936 8327.9014 L-7924.0078 8327.8994 L-7924.0078 8327.5117 Lf-7924.0078 8326.8076 m-7924.0078 8326.4814 L-7936 8326.4814 L-7936 8326.8076 L-7936 8326.8721 L-7924.0078 8326.8721 L-7924.0078 8326.8076 Lf0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa-7924.0078 8327.4463 m-7924.0078 8326.8721 L-7936 8326.8721 L-7936 8327.4463 L-7936 8327.5117 L-7924.0078 8327.5117 L-7924.0078 8327.4463 LfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 160)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7936 8331.2646 m-7925.3638 8331.2646 L-7925.3638 8320.6279 L-7936 8320.6279 L-7936 8331.2646 Ln-7936 8320.6279 m-7936 8324.5186 L-7936 8325.2285 L-7936 8325.6113 L-7936 8326.2529 L-7936 8326.6416 L-7936 8327.3506 L-7936 8331.2646 L-7925.3638 8331.2646 L-7925.3638 8320.6279 L-7936 8320.6279 Lnu0 O0.860075 0.849699 0.789548 1 0 0 0 Xa-7929.9585 8332.46 m-7929.2515 8332.46 L-7929.2607 8327.416 L-7923.5229 8327.415 L-7923.5229 8326.7041 L-7929.9707 8326.707 L-7929.9585 8332.46 Lf-7931.6055 8324.9941 m-7931.8696 8325.2568 -7932.0215 8325.623 -7932.0215 8325.9961 C-7932.0073 8332.46 L-7931.2979 8332.46 L-7931.3125 8325.9961 L-7931.3125 8325.8096 -7931.2363 8325.6279 -7931.1045 8325.4951 c-7930.9717 8325.3633 -7930.7891 8325.2881 -7930.6021 8325.2881 C-7923.5229 8325.2881 L-7923.5229 8324.5781 L-7930.6021 8324.5781 L-7930.9761 8324.5781 -7931.3418 8324.7295 -7931.6055 8324.9941 cf0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa-7930.2827 8332.46 m-7929.9585 8332.46 L-7929.9707 8326.707 L-7923.5229 8326.7041 L-7923.5229 8326.3154 L-7930.2827 8326.3154 L-7930.2827 8332.46 Lf-7931.1045 8325.4951 m-7931.2363 8325.6279 -7931.3125 8325.8096 -7931.3125 8325.9961 C-7931.2979 8332.46 L-7930.9219 8332.46 L-7930.9219 8325.9961 L-7930.9219 8325.9121 -7930.8877 8325.8311 -7930.8281 8325.7705 c-7930.7695 8325.7119 -7930.6865 8325.6777 -7930.6025 8325.6777 C-7923.5229 8325.6777 L-7923.5229 8325.2881 L-7930.6021 8325.2881 L-7930.7891 8325.2881 -7930.9717 8325.3633 -7931.1045 8325.4951 cf0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa-7930.8281 8325.7705 m-7930.8877 8325.8311 -7930.9219 8325.9121 -7930.9219 8325.9961 C-7930.9219 8332.46 L-7930.2827 8332.46 L-7930.2827 8326.3154 L-7923.5229 8326.3154 L-7923.5229 8325.6777 L-7930.6025 8325.6777 L-7930.6865 8325.6777 -7930.7695 8325.7119 -7930.8281 8325.7705 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 161)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7936 8332.46 m-7924.0078 8332.46 L-7924.0078 8321.8232 L-7936 8321.8232 L-7936 8332.46 Ln-7935.0117 8321.8232 m-7935.0117 8325.7725 L-7935.0117 8326.8076 L-7935.0117 8327.4463 L-7935.0117 8328.5449 L-7935.0117 8332.46 L-7924.3765 8332.46 L-7924.3765 8328.5449 L-7924.3765 8327.4463 L-7924.3765 8326.8076 L-7924.3765 8325.7725 L-7924.3765 8321.8232 L-7935.0117 8321.8232 Ln0 O0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa-7924.0078 8327.5117 m-7936 8327.5117 L-7936 8327.9014 L-7924.0078 8327.8994 L-7924.0078 8327.5117 Lf-7924.0078 8326.8076 m-7924.0078 8326.4814 L-7936 8326.4814 L-7936 8326.8076 L-7936 8326.8721 L-7924.0078 8326.8721 L-7924.0078 8326.8076 Lf0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa-7924.0078 8327.4463 m-7924.0078 8326.8721 L-7936 8326.8721 L-7936 8327.4463 L-7936 8327.5117 L-7924.0078 8327.5117 L-7924.0078 8327.4463 Lf1 Ap0.860075 0.849699 0.789548 1 0 0 0 Xa-7934.2715 8328.6104 m-7936 8328.6104 L-7936 8325.7725 L-7934.2715 8325.7725 L-7934.2715 8328.6104 Lf0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa-7933.5967 8328.5938 m-7934.4492 8328.5938 L-7934.4492 8325.7568 L-7933.5967 8325.7568 L-7933.5967 8328.5938 Lf0 Ap0.860075 0.849699 0.789548 1 0 0 0 Xa-7924.0078 8328.5449 m-7924.0078 8327.8994 L-7936 8327.9014 L-7936 8328.5449 L-7936 8328.6104 L-7924.0078 8328.6094 L-7924.0078 8328.5449 Lf-7924.0078 8325.7725 m-7936 8325.7725 L-7936 8326.4814 L-7924.0078 8326.4814 L-7924.0078 8325.7725 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 162)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7936 8332.46 m-7924.6099 8332.46 L-7924.6099 8321.8232 L-7936 8321.8232 L-7936 8332.46 Ln-7935.2461 8328.5449 m-7935.2461 8332.46 L-7924.6099 8332.46 L-7924.6099 8321.8232 L-7935.2461 8321.8232 L-7935.2461 8325.7148 L-7935.2461 8328.5449 Lnu0 O0.860075 0.849699 0.789548 1 0 0 0 Xa-7929.6245 8328.4814 m-7929.6245 8327.8369 L-7936 8327.8369 L-7936 8328.4814 L-7936 8328.5449 L-7929.6245 8328.5449 L-7929.6245 8328.4814 Lf-7929.6245 8325.708 m-7936 8325.708 L-7936 8326.418 L-7929.6245 8326.418 L-7929.6245 8325.708 Lf0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa-7929.6245 8327.4463 m-7936 8327.4463 L-7936 8327.8369 L-7929.6245 8327.8369 L-7929.6245 8327.4463 Lf-7929.6245 8326.7432 m-7929.6245 8326.418 L-7936 8326.418 L-7936 8326.7432 L-7936 8326.8086 L-7929.6245 8326.8086 L-7929.6245 8326.7432 Lf0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa-7929.6245 8327.3809 m-7929.6245 8326.8086 L-7936 8326.8086 L-7936 8327.3809 L-7936 8327.4463 L-7929.6245 8327.4463 L-7929.6245 8327.3809 LfU-7935.2461 8332.46 m-7924.6099 8332.46 L-7924.6099 8321.8232 L-7935.2461 8321.8232 L-7935.2461 8332.46 Ln-7924.7241 8327.1416 m-7932.8125 8331.8105 LN0 O0.860075 0.849699 0.789548 1 0 0 0 Xa-7932.4814 8326.4199 m-7932.4814 8323.6006 L-7926.3535 8327.1377 L-7932.4814 8330.6758 L-7932.4814 8327.8369 L-7932.8125 8327.8369 L-7932.8125 8328.5449 L-7932.8125 8331.8105 L-7924.7241 8327.1416 L-7932.8125 8322.4727 L-7932.8125 8325.7109 L-7932.8125 8326.4199 L-7932.4814 8326.4199 Lf0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa-7932.4814 8330.6758 m-7926.3535 8327.1377 L-7932.4814 8323.6006 L-7932.4814 8326.4199 L-7932.4814 8326.8076 L-7932.3472 8326.8076 L-7932.2148 8326.4346 -7931.8633 8326.167 -7931.4453 8326.167 c-7930.9155 8326.167 -7930.4849 8326.5967 -7930.4849 8327.127 c-7930.4849 8327.6572 -7930.9155 8328.0869 -7931.4453 8328.0869 c-7931.8633 8328.0869 -7932.2148 8327.8193 -7932.3472 8327.4463 C-7932.4814 8327.4463 L-7932.4814 8327.8369 L-7932.4814 8330.6758 Lf0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa-7931.4453 8328.0869 m-7930.9155 8328.0869 -7930.4849 8327.6572 -7930.4849 8327.127 c-7930.4849 8326.5967 -7930.9155 8326.167 -7931.4453 8326.167 c-7931.8633 8326.167 -7932.2148 8326.4346 -7932.3472 8326.8076 c-7932.3828 8326.9072 -7932.4058 8327.0137 -7932.4058 8327.127 c-7932.4058 8327.2393 -7932.3828 8327.3447 -7932.3472 8327.4463 c-7932.2148 8327.8193 -7931.8633 8328.0869 -7931.4453 8328.0869 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7935.8833 8332.415 m-7844.0479 8332.415 L-7844.0479 8328.1357 L-7935.8833 8328.1357 L-7935.8833 8332.415 Ln0 O0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa-7935.6631 8329.7354 m-7936 8329.8018 -7935.4814 8329.9912 -7935.8833 8329.8486 C-7935.8379 8329.7305 -7935.7725 8329.6416 -7935.6631 8329.7354 Cf-7845.1675 8329.9014 m-7846.2524 8330.6641 -7847.6816 8329.8936 -7848.8701 8330.3799 C-7849.0098 8330.4121 -7848.8345 8329.9609 -7849.1484 8330.0625 C-7850.3008 8330.6553 -7852.1162 8330.3018 -7853.5195 8329.8447 C-7853.4346 8329.7266 L-7853.7017 8329.6416 -7854.0283 8330.0322 -7854.3115 8329.9775 C-7854.3135 8329.8994 -7854.2207 8329.8662 -7854.2861 8329.7578 C-7854.3574 8329.9951 -7854.7983 8329.8682 -7854.9185 8330.0439 C-7855.0303 8329.9521 -7855.0195 8329.7646 -7855.1641 8329.6602 C-7855.3262 8329.9297 L-7855.7769 8330.5693 -7856.4209 8329.8857 -7857.0361 8330.2158 C-7857.0063 8330.1533 -7856.9453 8330.1045 -7856.9941 8330.0439 C-7857.9814 8330.4326 -7859.2168 8330.3594 -7860.3208 8330.5029 C-7860.2769 8330.4082 -7860.2363 8330.2354 -7860.3008 8330.1279 C-7860.3555 8330.4111 -7860.6963 8330.4824 -7860.9922 8330.5381 C-7861.1255 8330.2471 -7861.4995 8330.8037 -7861.8467 8330.6426 C-7861.8169 8330.5791 L-7862.0732 8330.8838 -7862.1973 8330.4033 -7862.4053 8330.7686 C-7862.5684 8330.54 L-7862.6807 8330.9502 -7862.9395 8330.3271 -7863.1514 8330.5361 C-7863.1445 8330.6201 L-7863.3442 8330.7197 -7863.4482 8330.5137 -7863.6338 8330.583 C-7863.6514 8330.5361 L-7864.0854 8330.6426 -7864.3379 8330.415 -7864.3271 8330.7354 C-7864.4795 8330.4785 -7863.9063 8330.6182 -7864.1455 8330.2441 C-7865.5732 8330.5752 -7867.0459 8330.5098 -7868.4834 8330.5166 C-7868.6465 8330.3877 -7868.7505 8330.3486 -7868.7871 8330.2266 C-7868.9307 8330.292 -7869.3281 8330.2861 -7869.4585 8330.4502 C-7869.4102 8330.4434 -7869.5513 8330.2861 -7869.6274 8330.2705 C-7869.8887 8330.1494 -7869.9131 8330.6221 -7870.2002 8330.4785 C-7870.0859 8330.3936 -7870.0469 8330.29 -7870.0854 8330.1709 C-7870.3301 8330.4209 -7870.6577 8330.3809 -7870.9473 8330.4609 C-7870.9023 8330.4082 -7870.8325 8330.376 -7870.8433 8330.2754 C-7871.1602 8330.5586 -7871.4209 8330.2158 -7871.6982 8330.3945 C-7871.5947 8330.21 L-7872.0415 8329.9854 -7871.7266 8330.5967 -7872.1128 8330.4639 C-7872.02 8330.4053 -7872.0527 8330.333 -7872.0361 8330.2578 C-7872.3965 8330.5938 -7872.9795 8330.4824 -7873.3389 8330.5967 C-7873.3174 8330.5713 -7873.3232 8330.5205 Y-7873.7148 8330.5625 -7874.1245 8330.458 -7874.5552 8330.6045 C-7874.7119 8330.5225 -7874.5039 8330.1533 -7874.9185 8330.2217 C-7874.9033 8330.5928 -7875.6221 8330.374 -7875.3779 8330.793 C-7875.7319 8330.7334 -7876.2925 8330.5938 -7876.5283 8330.7197 C-7876.3691 8330.5791 -7876.7007 8330.2666 -7876.4063 8330.2354 C-7876.6289 8330.0098 L-7876.5957 8329.8584 -7876.3999 8330.0615 -7876.4707 8329.8701 C-7876.6182 8329.8857 -7877.0479 8330.0322 -7877.1797 8329.9717 C-7877.4531 8330.1992 -7877.7041 8330.624 -7878.1465 8330.6709 C-7877.9385 8330.5264 -7878.2646 8330.2617 -7878.1235 8330.1982 C-7878.7407 8330.9082 L-7878.8877 8330.9258 -7878.7725 8330.6162 -7878.9854 8330.7129 C-7878.9746 8330.8105 -7879.0674 8330.8721 -7879.1318 8330.9521 C-7879.1875 8330.9082 -7879.7441 8331.0439 -7879.8081 8330.6777 C-7879.8735 8330.5361 -7879.5684 8330.6025 -7879.7314 8330.4717 C-7880.0029 8330.4746 -7880.0151 8330.6006 -7880.2871 8330.6064 C-7880.2925 8330.5576 L-7880.4717 8330.5029 -7880.8213 8330.7129 -7880.6265 8330.915 C-7880.5015 8330.9258 -7880.6738 8330.6953 -7880.4888 8330.8018 C-7880.6152 8331.0137 -7880.9312 8331.0732 -7881.2031 8331.0762 C-7881.1104 8331.0186 -7881.1216 8330.9209 -7881.0845 8330.8174 C-7881.4497 8331.1045 -7881.8369 8331.1953 -7882.2451 8331.3154 C-7882.2515 8331.4893 -7882.0928 8330.999 -7882.0327 8331.0908 C-7882.5557 8330.8496 -7883.1128 8331.4326 -7883.5479 8331.0801 C-7883.4766 8331.0498 -7883.5098 8331.3271 -7883.5146 8331.2783 C-7883.7666 8331.2568 -7883.7549 8331.0049 -7883.9189 8331.0977 C-7883.9355 8330.9502 -7884.1255 8331.1455 -7884.2944 8331.1904 C-7884.3818 8331.2969 -7884.3384 8331.1182 -7884.1914 8331.1025 C-7884.4268 8331.2266 -7885.3691 8331.4541 -7885.9131 8331.2393 C-7885.9023 8331.3369 -7886.2471 8331.5977 -7886.3721 8331.5869 C-7886.3232 8331.3584 L-7886.4375 8331.2217 -7886.7422 8331.377 -7886.7632 8331.1826 C-7887.0303 8331.46 -7885.7344 8330.9463 -7886.0957 8331.1602 C-7886.1895 8330.9697 -7886.5991 8331.5244 -7886.5215 8331.2129 C-7886.7725 8331.2217 -7887.0161 8331.4785 -7887.2559 8331.2646 C-7887.1865 8331.3018 -7887.0522 8330.9473 -7887.2549 8330.9639 C-7887.6123 8331.0049 -7887.3564 8331.0732 -7887.6465 8331.1494 C-7887.8281 8331.2432 L-7887.8398 8331.4658 -7888.1475 8331.2129 -7888.0146 8331.4609 C-7888.0586 8331.2783 -7888.5337 8331.5752 -7888.4971 8331.2061 C-7888.4473 8330.915 L-7888.6016 8330.9365 -7888.7002 8331.2217 -7888.8213 8331.3496 C-7888.8418 8331.3232 -7888.8823 8331.2646 -7888.8745 8331.2178 C-7888.8994 8331.6631 -7889.2432 8331.1807 -7889.4268 8331.5244 C-7889.7505 8331.3701 -7890.2495 8331.5098 -7890.4023 8331.2334 C-7890.6514 8331.3682 -7890.8784 8331.5273 -7891.1621 8331.4326 C-7891.1055 8331.3906 -7891.0283 8331.377 -7891.0122 8331.2822 C-7891.1904 8331.1514 -7891.2344 8331.2686 -7891.3975 8331.3408 C-7891.3608 8331.2744 -7891.7539 8331.0801 -7891.9521 8330.9229 C-7892.1992 8331.0557 -7892.1143 8331.2959 -7892.1392 8331.4424 C-7892.3652 8331.0029 -7892.8379 8331.7256 -7893.1211 8331.3271 C-7893.0352 8331.2666 -7892.7598 8331.1113 -7892.9658 8331.001 C-7893.1919 8330.5625 -7893.4219 8331.3242 -7893.7861 8331.1143 C-7893.6968 8331.4785 L-7893.8594 8331.2529 -7894.2334 8331.6904 -7894.1963 8331.3193 C-7894.3184 8331.4502 -7894.6265 8331.1982 -7894.5859 8331.5537 C-7895.1846 8331.2529 -7896.0425 8331.7354 -7896.4102 8331.0977 C-7896.4961 8331.1563 -7896.7104 8331.0967 -7896.6665 8331.2793 C-7896.5239 8331.4775 -7896.4673 8331.1377 -7896.4141 8331.2725 C-7896.4912 8331.2832 -7896.5078 8331.3809 -7896.5161 8331.4297 C-7896.7021 8331.3486 -7896.8486 8331.3232 -7896.6729 8331.0273 C-7897.0869 8330.8076 -7897.1001 8331.6318 -7897.6274 8331.4922 C-7897.6035 8331.3457 -7897.6436 8331.29 -7897.7979 8331.3135 C-7898.0903 8331.5654 L-7898.4312 8331.5068 -7898.2842 8331.2305 -7898.2925 8330.9814 C-7898.4746 8331.0234 -7898.6973 8331.0127 -7898.7803 8331.1982 C-7899.0015 8330.8857 L-7898.8398 8331.1113 -7899.1514 8331.0361 -7899.2368 8331.0967 C-7899.1514 8331.0361 L-7899.1846 8330.9297 -7899.3955 8330.9951 -7899.5024 8331.0264 C-7899.4766 8331.1807 -7899.2617 8331.2432 -7899.1445 8331.2881 C-7899.2373 8331.3975 -7899.3823 8331.3721 -7899.5059 8331.501 C-7899.4648 8331.2568 -7899.8027 8331.3271 -7899.9473 8331.3018 C-7900.1133 8331.249 -7900.1348 8331.5205 -7900.1831 8331.5127 C-7900.1875 8331.3857 -7900.4541 8331.4912 -7900.3247 8331.3135 C-7900.2681 8331.2725 -7900.1953 8331.4365 -7900.1016 8331.3242 C-7900.2109 8331.2305 -7900.1982 8331.0098 -7900.4258 8331.1709 C-7900.5967 8331.292 -7900.3818 8331.6533 -7900.7061 8331.499 C-7900.6211 8331.4385 -7900.6055 8331.3408 -7900.5391 8331.2529 C-7900.8433 8331.126 L-7900.8564 8331.3486 L-7900.8975 8331.292 -7900.8691 8331.2725 -7900.8877 8331.2432 C-7900.9785 8331.4775 -7901.3521 8331.3154 -7901.4209 8331.5791 C-7901.5742 8331.6025 -7901.7441 8331.4248 -7901.8906 8331.3994 C-7901.8623 8331.3799 L-7902.0415 8331.249 -7902.2793 8331.335 -7902.4297 8331.4854 C-7902.4219 8331.4365 L-7902.5195 8331.4189 -7902.7505 8331.4541 -7902.8735 8331.585 C-7903.1201 8331.417 -7902.9561 8330.7441 -7903.2295 8331.0234 C-7903.48 8331.0322 -7903.6221 8331.4326 -7903.5215 8331.5752 C-7903.9717 8331.4248 -7904.4834 8331.7881 -7904.9009 8331.4424 C-7904.9658 8331.5322 -7904.9248 8331.5889 -7905.0586 8331.6416 C-7905.7197 8331.5537 -7906.4551 8331.9053 -7906.9814 8331.4678 C-7906.79 8331.374 -7906.9688 8331.2441 -7906.9727 8331.1182 C-7907.1309 8331.3174 -7907.1631 8330.9111 -7907.2197 8331.2529 C-7907.2041 8331.4541 -7907.2197 8331.5518 -7907.0337 8331.6328 C-7907.4282 8331.7402 -7908.0283 8331.7402 -7908.2471 8331.5537 C-7908.1377 8331.6465 -7908.2227 8331.708 -7908.3086 8331.7686 C-7908.2803 8331.4473 -7908.5713 8331.3994 -7908.7915 8331.5127 C-7908.8223 8331.708 L-7908.9658 8331.5068 L-7909.0503 8331.5693 -7909.0591 8331.917 -7909.2773 8331.7295 C-7909.2891 8331.6533 -7909.3018 8331.5762 -7909.3418 8331.5205 C-7909.5693 8331.6807 -7909.8906 8331.9521 -7910.1377 8331.7861 C-7910.3398 8331.501 L-7910.4453 8331.5322 -7910.6235 8331.7041 -7910.4375 8331.7861 C-7910.8594 8331.6143 -7911.1309 8331.5928 -7911.2646 8331.3457 C-7911.9912 8331.9473 -7913.0459 8331.9717 -7913.8906 8331.9287 C-7913.8652 8331.7822 L-7914.0923 8331.6455 -7913.9834 8332.0381 -7914.1416 8331.9365 C-7914.0684 8331.7969 -7914.3145 8331.6328 -7914.1362 8331.4609 C-7914.4609 8331.3066 -7914.5547 8331.7158 -7914.7656 8331.7822 C-7914.7979 8331.9746 -7914.5957 8331.6592 -7914.6367 8331.9033 C-7914.6729 8331.9717 -7915.0859 8331.7529 -7915.1362 8332.0439 C-7915.2178 8331.9297 -7915.1543 8331.7158 -7915.1104 8331.5977 C-7915.3086 8331.7393 L-7915.5513 8331.3994 -7914.7559 8331.1318 -7915.0107 8330.7129 C-7915.1934 8330.7578 L-7915.3682 8330.4541 -7914.71 8330.415 -7915.1689 8330.3105 C-7915.3682 8330.4541 -7915.5381 8330.876 -7915.3608 8331.0049 C-7915.7754 8331.085 -7915.5527 8331.6982 -7915.9985 8331.6738 C-7916.1201 8331.5029 -7915.6416 8331.6328 -7915.7275 8331.3936 C-7915.9375 8331.1592 -7916.1484 8331.5244 -7916.3354 8331.4424 C-7916.1279 8331.5518 -7916.3032 8331.8457 -7916.4375 8331.8994 C-7916.6641 8331.7617 -7916.29 8331.624 -7916.6113 8331.5938 C-7916.6641 8331.7617 -7916.9595 8331.8877 -7916.7041 8332.0049 C-7916.8203 8332.3857 -7917.0381 8331.8994 -7917.2129 8332.1943 C-7917.3174 8331.9258 -7916.8823 8331.5752 -7917.2354 8331.4414 C-7917.1792 8331.6992 -7917.6704 8331.792 -7917.4839 8332.1738 C-7917.6221 8332.1006 -7917.6367 8331.8975 -7917.5361 8331.7393 C-7917.7334 8331.5801 -7918.0151 8332.21 -7918.0801 8331.6982 C-7918.1479 8331.9609 L-7918.21 8331.876 -7918.2983 8331.8105 -7918.3994 8331.6689 C-7918.5732 8331.6641 -7918.96 8332.0264 -7918.9443 8331.6279 C-7919 8331.6689 -7919.3975 8331.6514 -7919.2441 8331.9258 C-7918.9971 8332.0938 -7918.96 8331.7256 -7918.8223 8332.0977 C-7918.9971 8331.793 -7919.1787 8332.1377 -7919.3213 8332.2393 C-7919.3447 8332.085 L-7919.4297 8332.1455 -7919.6255 8332.1113 -7919.6787 8332.2783 C-7919.6133 8332.1904 -7919.6475 8332.085 -7919.7148 8332.0479 C-7919.8042 8332.2822 L-7920.1494 8332.3994 -7919.8857 8331.8701 -7920.2217 8331.9385 C-7919.9663 8331.7568 L-7920.0225 8331.7959 -7920.1367 8331.5762 -7920.2979 8331.6494 C-7920.3604 8331.8633 -7920.4775 8332.1201 -7920.5313 8332.2861 C-7920.7207 8332.3799 -7920.6162 8332.0449 -7920.8027 8332.2646 C-7920.5586 8332.0059 L-7920.5215 8331.9365 -7920.7231 8331.6533 -7920.9761 8331.6592 C-7921.1377 8331.7334 -7921.3887 8332.042 -7921.1338 8332.1592 C-7921.2607 8332.1631 -7921.4385 8332.0322 -7921.3379 8331.876 C-7921.6255 8331.9502 -7921.2998 8332.1064 -7921.5479 8332.2393 C-7921.6494 8332.0967 -7921.9658 8331.8936 -7922.1563 8331.6865 C-7921.8975 8331.3281 L-7922.0693 8331.3242 L-7921.8467 8331.0381 -7922.1826 8331.1064 -7922.0566 8330.8037 C-7922.1743 8330.7568 -7922.3169 8330.8594 -7922.4307 8330.9385 C-7922.0864 8331.4229 -7922.8159 8331.6006 -7922.7158 8332.042 C-7923.1875 8332.1631 -7923.0107 8330.9678 -7923.5024 8331.6592 C-7923.4219 8331.7744 -7923.6533 8332.1104 -7923.3564 8331.9824 C-7923.6494 8331.9346 -7923.5557 8332.4258 -7923.9014 8332.2432 C-7923.6455 8332.0615 -7924.1763 8331.7959 -7923.8066 8331.5322 C-7923.8311 8331.6777 -7923.6001 8331.6426 -7923.5435 8331.6025 C-7923.6641 8331.4326 -7923.5186 8331.1563 -7923.8184 8331.1563 C-7924.0015 8331.1992 -7924.2524 8331.208 -7924.2158 8331.4385 C-7924.2085 8331.6914 -7923.9365 8331.4111 -7924.0537 8331.667 C-7924.4185 8331.7549 -7924.4795 8331.3701 -7924.6304 8331.8193 C-7924.3999 8331.7832 -7924.3423 8332.0439 -7924.3467 8332.2178 C-7924.6143 8332.3232 L-7924.5625 8332.1553 L-7924.9922 8332.0342 -7924.6895 8332.46 -7925.1055 8332.415 C-7925.3008 8332.083 L-7925.2017 8331.7969 -7924.6953 8332.21 -7924.7695 8331.7441 C-7925.04 8331.7256 -7925.1299 8331.9609 -7925.3848 8331.8418 C-7925.3281 8331.8018 -7925.2505 8331.79 -7925.1943 8331.749 C-7925.2915 8331.7334 -7925.3877 8331.1162 -7925.7734 8331.4775 C-7925.9727 8331.6182 -7925.8262 8331.6426 -7925.8311 8331.8174 C-7926.2656 8331.8701 -7926.3955 8332.0479 -7926.6753 8332.0752 C-7926.6177 8331.7354 -7927.1699 8332.042 -7926.8608 8331.6943 C-7926.7188 8331.8936 -7926.0903 8331.874 -7925.9365 8331.5498 C-7926.0947 8331.1465 -7925.5952 8331.6064 -7925.5024 8331.1982 C-7925.8506 8331.1885 -7925.8335 8330.792 -7925.8896 8330.5322 C-7925.9863 8330.5137 -7926.0801 8330.624 -7926.1377 8330.6641 C-7926.1787 8330.9082 -7926.0522 8330.9053 -7926.0449 8331.1563 C-7926.4336 8331.0908 -7926.8081 8331.2266 -7927.0225 8331.4658 C-7927.1523 8331.3447 -7927.1113 8331.1006 -7926.9575 8331.0762 C-7927.4199 8331.1494 -7927.9141 8331.1162 -7928.3535 8331.042 C-7928.0693 8331.4414 -7928.8433 8331.1357 -7928.6494 8331.4678 C-7928.4141 8331.5576 -7928.2119 8331.8418 -7928.3418 8332.0205 C-7928.4888 8331.9951 -7928.3369 8331.8457 -7928.3984 8331.7607 C-7928.5859 8331.9785 -7928.6895 8331.4111 -7928.8735 8331.7549 C-7928.4512 8331.626 -7928.7915 8331.2686 -7928.7139 8330.9561 C-7929.0186 8331.1318 -7928.7007 8330.7334 -7929.0024 8330.7334 C-7929.3057 8330.9072 -7929.6787 8331.0439 -7930.0161 8331.1113 C-7930.4399 8330.8154 -7931.0898 8331.1064 -7931.4683 8331.1182 C-7931.6665 8330.96 -7931.5322 8330.6064 -7931.7471 8330.5449 C-7931.9995 8330.5518 -7931.5601 8330.9258 -7931.9336 8330.7646 C-7931.8975 8330.6943 L-7932.0107 8330.7754 -7932.5825 8330.4541 -7932.6929 8330.9609 C-7932.5776 8330.5791 L-7932.6475 8330.5439 -7932.7119 8330.6318 -7932.7695 8330.6729 C-7932.7725 8330.5479 -7932.8535 8330.4346 -7932.7402 8330.3525 C-7932.9707 8330.0889 -7933.2241 8330.3945 -7933.4746 8330.4053 C-7933.3135 8330.6318 L-7933.7422 8330.8096 -7934.0293 8330.585 -7934.4443 8330.6641 C-7934.4316 8330.4424 L-7934.6787 8330.5752 L-7934.6182 8330.3594 -7934.8447 8330.2217 -7934.9751 8330.4014 C-7934.3335 8329.8584 L-7934.1553 8329.9893 -7934.5283 8330.126 -7934.4165 8330.3447 C-7934.3213 8330.5361 -7933.9375 8330.4746 -7933.8755 8330.2617 C-7934.0225 8330.2373 -7934.0293 8330.2861 -7934.1436 8330.3662 C-7934.1919 8330.0576 -7933.9688 8330.0693 -7933.8584 8329.8633 C-7933.9355 8329.876 -7934.0449 8329.7822 -7934.0615 8329.8799 C-7933.9102 8329.7295 -7933.7578 8329.7061 -7933.5059 8329.6982 C-7933.6763 8329.8193 -7933.4131 8329.8896 -7933.4775 8329.9775 C-7933.4575 8329.7061 -7933.2168 8329.6221 -7932.9053 8329.6982 C-7932.6831 8330.0127 -7932.3208 8329.4961 -7931.96 8329.583 C-7932.1064 8329.8584 -7932.2935 8330.0791 -7932.5127 8330.1904 C-7932.2861 8330.3281 -7932.2607 8330.1826 -7932.0337 8330.3213 C-7931.9238 8330.1162 -7931.8457 8329.8018 -7931.5503 8329.6768 C-7931.5342 8329.8799 L-7931.2666 8329.7754 -7931.2666 8329.4746 -7930.9258 8329.5322 C-7930.3418 8329.6318 -7929.7407 8329.6318 -7929.2949 8329.6572 C-7929.2783 8329.8594 L-7929.0303 8329.4258 -7928.4521 8329.6992 -7928.1182 8329.5068 C-7927.5503 8329.7021 -7926.8848 8329.3135 -7926.5938 8329.6631 C-7925.5913 8329.5068 -7924.7148 8329.3545 -7923.6768 8329.4287 C-7923.8516 8329.7227 L-7923.6655 8329.5068 -7923.7305 8329.8936 -7923.5479 8329.8496 C-7923.7578 8329.6143 -7923.2949 8329.5439 -7923.1665 8329.3633 C-7922.7041 8329.5928 -7922.1104 8329.3418 -7921.7007 8329.1357 C-7921.6846 8329.3389 L-7921.2705 8328.958 -7920.7759 8329.292 -7920.2598 8329.3545 C-7920.2007 8329.4385 -7920.1074 8329.6289 -7919.9536 8329.6064 C-7919.6738 8329.2783 -7919.5273 8329.3018 -7919.1167 8329.0967 C-7918.8169 8329.0967 -7918.3301 8329.1777 -7918.0254 8329.3057 C-7916.8975 8328.8447 -7915.7456 8329.1387 -7914.5732 8328.8623 C-7914.4888 8329.1006 L-7913.3521 8328.5898 -7911.9541 8329.0537 -7910.9839 8328.792 C-7911.0776 8329.1992 L-7910.7734 8329.3242 -7910.3843 8329.0928 -7910.4619 8328.8037 C-7910.1567 8328.9287 -7909.7007 8328.6064 -7909.5068 8328.9414 C-7909.1953 8329.0166 -7909.1255 8328.7529 -7908.8662 8328.6982 C-7908.2422 8328.8525 -7908.0107 8328.8174 -7907.4224 8328.7402 C-7907.5684 8328.7158 L-7907.6328 8328.8057 -7907.6387 8328.9785 -7907.4922 8329.0049 C-7907.2725 8328.8906 -7906.6846 8329.1143 -7906.9033 8328.6279 C-7906.2754 8328.9082 -7905.4385 8328.3994 -7904.8271 8328.7783 C-7904.8789 8328.6455 -7904.7246 8328.6201 -7904.6602 8328.5303 C-7904.1089 8328.5244 -7903.5293 8328.7959 -7903.0898 8328.5693 C-7903.0024 8328.6357 -7903.2295 8328.7959 -7903.0049 8328.8096 C-7902.8721 8328.7578 -7903.0024 8328.6357 -7902.8384 8328.5615 C-7901.9453 8328.3135 -7901.0303 8328.8174 -7900.2188 8328.7529 C-7898.7754 8328.4961 -7897.2695 8328.626 -7895.8867 8328.583 C-7895.9023 8328.6807 L-7895.4395 8328.3066 -7894.8159 8329.0625 -7894.4463 8328.501 C-7894.3369 8328.5938 -7894.0283 8328.5449 -7894.1094 8328.7334 C-7893.7407 8328.4697 -7893.0771 8328.9814 -7892.5439 8328.6465 C-7892.5928 8328.6377 -7892.6211 8328.6572 -7892.6777 8328.6992 C-7892.1392 8328.915 -7891.6641 8328.6201 -7891.0957 8328.8154 C-7891.1533 8328.8574 -7891.2583 8328.8877 -7891.2754 8328.9854 C-7891.0557 8329.1729 -7890.7549 8328.5723 -7890.6348 8329.0439 C-7890.5088 8329.04 -7890.5449 8328.8076 -7890.6221 8328.8213 C-7889.3779 8329.0049 -7888.0498 8328.7041 -7886.7549 8328.5967 C-7885.8271 8328.877 -7886.6982 8329.3896 -7885.9663 8329.0381 C-7885.9063 8329.1289 -7885.9229 8328.8584 -7885.9131 8328.9561 C-7885.6299 8328.8242 -7885.4717 8329.4814 -7885.2754 8329.2354 C-7885.3564 8328.9463 -7885.1445 8329.0732 -7885.1387 8328.8975 C-7884.5713 8329.085 -7884.4575 8329.3457 -7884.0098 8329.126 C-7884.0435 8329.2783 L-7883.5186 8328.8486 -7882.9102 8329.0791 -7882.4673 8328.583 C-7879.5728 8328.4922 -7876.7983 8328.2178 -7873.9761 8328.1602 C-7871.1865 8328.2549 -7868.4551 8328.0322 -7865.6221 8328.2959 C-7864.9585 8328.6953 -7864.9087 8328.6846 -7864.1797 8328.5225 C-7864.2095 8328.5869 -7864.2549 8328.6025 -7864.2061 8328.6631 C-7864.1699 8328.335 -7863.6929 8328.6318 -7863.6235 8328.3193 C-7862.5762 8328.3799 -7861.6113 8328.29 -7860.5337 8328.2881 C-7860.7041 8328.3232 -7860.7896 8328.5898 -7860.5869 8328.5693 C-7860.3755 8328.3594 L-7860.3408 8328.4521 L-7860.2021 8328.4033 -7860.0513 8328.2412 -7860.1943 8328.1357 C-7857.4873 8327.8525 -7854.8242 8328.5098 -7852.1729 8328.4297 C-7851.5435 8328.5664 -7850.6475 8328.4414 -7849.9629 8328.374 C-7847.9355 8328.8105 -7846.1079 8329.1641 -7844.0479 8328.8584 C-7844.3169 8329.7061 -7845.1675 8329.9014 Vf-7935.2578 8329.7021 m-7935.1855 8329.8662 -7934.9497 8329.9561 -7935.1377 8330.1738 C-7935.1611 8330.0205 -7935.2822 8329.8486 -7935.2578 8329.7021 Cf-7928.9619 8331.3896 m-7928.9536 8331.3408 -7928.8721 8331.4561 -7928.8521 8331.4824 C-7928.9297 8331.4951 -7929.0024 8331.6328 -7929.0645 8331.5479 C-7928.9854 8331.5361 -7928.9976 8331.458 -7928.9619 8331.3896 Cf-7927.3521 8331.4873 m-7927.3765 8331.6328 -7927.7207 8331.749 -7927.9238 8331.7666 C-7927.3521 8331.4873 Lf-7925.8521 8332.0889 m-7925.7227 8332.2119 -7925.7583 8332.2793 -7925.9326 8332.2754 C-7925.9453 8332.1982 -7925.8877 8332.1592 -7925.8521 8332.0889 Cf-7925.7456 8331.7568 m-7925.6211 8331.7529 -7925.5591 8331.8389 -7925.4985 8331.9229 C-7925.5029 8331.7969 -7925.7871 8332.001 -7925.7456 8331.7568 Cf-7922.4893 8332.1807 m-7922.4111 8332.1689 -7922.2417 8332.0479 -7922.1689 8332.21 C-7922.2505 8332.0967 -7922.5498 8332.3945 -7922.4893 8332.1807 Cf-7920.9761 8331.96 m-7920.9272 8331.9697 -7920.9072 8331.9961 -7920.8506 8331.9561 C-7920.7607 8332.0225 -7920.8555 8332.1289 -7920.9312 8332.1426 C-7920.9761 8331.96 Lf-7893.4287 8331.374 m-7893.5923 8331.4463 L-7893.5684 8331.3018 L-7893.4287 8331.374 Lf-7881.3574 8331.3662 m-7881.1943 8331.2744 -7881.2441 8331.5029 -7881.2168 8331.5244 C-7881.3643 8331.54 -7881.1621 8331.3447 -7881.3574 8331.3662 Cf-7874.8486 8330.6377 m-7874.8984 8330.6416 L-7874.8818 8330.3418 L-7874.8486 8330.6377 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7909.9727 8332.46 m-7909.9727 8306.4316 L-7936 8306.4316 L-7936 8332.46 L-7909.9727 8332.46 Ln0 Ap0 R0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 XA1.125 w-7936 8315.1064 m-7909.9727 8315.1064 lS0.636286 0.625879 0.658045 0.550133 0.258824 0.223529 0.196078 XA-7936 8323.7842 m-7909.9727 8323.7842 lS0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 XA0.375 w-7936 8319.4453 m-7909.9727 8319.4453 lS0 O0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 Xa1 w-7914.5742 8319.4717 m-7914.3442 8319.2002 -7914.6914 8318.9141 -7915 8318.7031 c-7915.1118 8318.626 -7915.5215 8318.8389 -7915.7466 8318.6729 c-7916.0439 8318.4551 -7916.1826 8318.3682 -7916.4824 8318.374 c-7916.6455 8318.377 -7917.0435 8318.5078 -7917.1895 8318.5381 c-7917.5679 8318.6143 -7917.8022 8318.8105 -7918.3672 8318.7148 c-7918.7344 8318.6514 -7918.8286 8318.5605 -7918.9233 8318.6074 c-7919.1118 8318.75 -7919.2202 8318.9736 -7919.4258 8319.0225 c-7919.9575 8319.1494 -7920.3535 8319.1934 -7920.8818 8319.1826 c-7921.3047 8319.1729 -7922.4185 8319.2412 -7923.2866 8319.1416 c-7923.6226 8319.1016 -7923.6025 8318.6768 -7923.7695 8318.6729 c-7923.8618 8318.6709 -7923.7646 8318.9863 -7923.8306 8319.0059 c-7924.1694 8319.1133 -7924.4702 8317.9629 -7924.6943 8318.0322 c-7924.8047 8318.0674 -7924.5562 8318.6133 -7924.6729 8318.6416 c-7924.8975 8318.6973 -7925.2178 8317.6777 -7925.4321 8317.7402 c-7925.5635 8317.7783 -7925.2886 8318.1982 -7925.4375 8318.2666 c-7925.6655 8318.3711 -7925.9087 8317.4951 -7926.1064 8317.5938 C-7926.1543 8317.6416 -7925.7295 8318.3975 -7926.1685 8318.3389 c-7926.2871 8318.3213 -7926.5054 8317.7734 -7926.5801 8317.7998 c-7926.6919 8317.8398 -7926.3535 8318.2617 -7926.4897 8318.3877 C-7926.7681 8318.6143 -7927.3711 8317.623 -7927.4575 8317.6943 c-7927.5791 8317.7959 -7927.1279 8318.5576 -7927.2695 8318.626 C-7927.4497 8318.8896 -7928.0142 8318.0127 -7928.0889 8318.0615 c-7928.1777 8318.1201 -7927.9058 8318.498 -7927.8799 8318.6934 c-7927.8545 8318.8877 -7927.9966 8319.0215 -7928.2144 8318.9697 c-7928.4736 8318.9072 -7928.8696 8318.1016 -7928.9727 8318.1953 C-7929.0791 8318.251 -7928.8682 8318.5381 -7928.7954 8318.7725 c-7928.7583 8318.8877 -7928.8882 8319.0615 -7929.0298 8319.0615 c-7929.3135 8319.1094 -7929.6255 8318.458 -7929.7065 8318.5625 c-7929.7524 8318.6221 -7929.5898 8318.9502 -7929.7295 8319.0479 c-7929.8994 8319.166 -7930.3115 8318.6982 -7930.4521 8318.7529 C-7930.5361 8318.8018 -7930.4126 8319.0566 -7930.4927 8319.1133 c-7930.7295 8319.2793 -7931.0039 8318.8809 -7931.0513 8318.9287 C-7931.1167 8318.9512 -7931.1201 8318.9961 -7931.2793 8319.1006 c-7931.4736 8319.2266 -7931.5254 8319.3086 -7931.5425 8319.4248 c-7931.5654 8319.543 -7931.3135 8319.835 -7931.1655 8319.8096 c-7930.8223 8319.75 -7930.8662 8320.3096 -7930.6328 8320.1758 c-7930.5679 8320.1387 -7930.6592 8319.7178 -7930.4199 8319.7256 c-7930.0488 8319.7383 -7929.9858 8320.2813 -7929.7817 8320.2705 c-7929.6406 8320.2637 -7929.8521 8319.6426 -7929.6328 8319.7207 c-7929.4751 8319.7754 -7929.0063 8320.7617 -7928.9795 8320.6689 c-7928.8975 8320.4023 -7929.0703 8319.8584 -7928.9409 8319.8682 c-7928.7568 8319.8828 -7928.5078 8320.7773 -7928.2544 8320.8975 c-7928.1826 8320.9326 -7928.3774 8320.0605 -7928.1958 8320.0566 C-7928.0898 8320.1064 -7927.7578 8320.9082 -7927.6274 8320.958 C-7927.5591 8320.9424 -7927.5879 8320.585 -7927.5176 8320.5645 c-7927.4688 8320.5498 -7927.2817 8321.0254 -7927.21 8320.9834 c-7927.1055 8320.9229 -7927.2471 8320.4521 -7927.0889 8320.3818 c-7926.9175 8320.3086 -7926.4878 8321.3525 -7926.3486 8321.2578 c-7926.2769 8321.21 -7926.3574 8320.6689 -7926.21 8320.7061 c-7926.0718 8320.7383 -7925.9414 8321.0742 -7925.8081 8321.1025 c-7925.7295 8321.1182 -7925.7935 8320.6514 -7925.7495 8320.6338 c-7925.5889 8320.5752 -7925.2329 8321.1318 -7925.0688 8320.9834 c-7924.8584 8320.7949 -7924.9395 8320.4297 -7924.8345 8320.4424 c-7924.6274 8320.4658 -7924.4912 8320.7031 -7924.4146 8320.6426 c-7924.2642 8320.5273 -7924.3281 8320.2393 -7924.0527 8320.1514 c-7923.8975 8320.1025 -7923.7935 8320.3945 -7923.7495 8320.3906 c-7923.6738 8320.3877 -7923.6782 8320.29 -7923.6665 8320.1846 c-7923.6328 8319.9209 -7923.6064 8319.8594 -7923.4878 8319.8369 c-7923.0854 8319.8135 -7922.5625 8319.7441 -7922.1807 8319.7354 c-7921.6274 8319.7207 -7920.2607 8319.6973 -7920.1182 8319.6973 c-7920 8319.6729 -7919.7432 8319.8545 -7919.6689 8319.9209 c-7919.4678 8320.1055 -7919.2998 8320.3193 -7918.9858 8320.5801 c-7918.8906 8320.6602 -7918.8081 8320.6406 -7918.7378 8320.6162 c-7918.5249 8320.5449 -7918.4585 8320.4922 -7918.2202 8320.4609 c-7917.9175 8320.4189 -7917.4272 8320.5088 -7917.1245 8320.6025 c-7916.6035 8320.7617 -7916.5264 8320.7842 -7916.0977 8320.7354 c-7915.6992 8320.6895 -7915.0586 8320.6182 -7915.0479 8320.2705 c-7915.0415 8320.0557 -7914.9414 8319.9033 -7914.5742 8319.4717 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7909.9722 8332.46 m-7909.9722 8306.4326 L-7936 8306.4326 L-7936 8332.46 L-7909.9722 8332.46 Ln0 Ap0 R0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 XA0.375 w-7918.6455 8319.4492 m-7909.9736 8319.4492 lS-7922.9839 8332.46 m-7922.9839 8323.7842 lS0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 XA1.125 w-7918.7202 8315.1104 m-7909.9727 8315.1104 lS-7927.3232 8332.459 m-7927.3232 8323.1055 lS0.636286 0.625879 0.658045 0.550133 0.258824 0.223529 0.196078 XA-7918.6504 8332.459 m-7918.6504 8330.0469 l-7915.9937 8329.8232 -7914.3096 8328.1201 v-7912.6064 8326.3936 -7912.3774 8323.7881 y-7909.9727 8323.7881 lS*u1 D0 O0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 Xa1 w-7926.8418 8316.6455 m-7926.8418 8316.71 -7926.8218 8316.751 -7926.7783 8316.751 c-7926.6943 8316.751 -7926.4634 8316.4141 -7926.3994 8316.4141 c-7926.3154 8316.4141 -7926.2729 8316.4561 -7926.2729 8316.5615 c-7926.2729 8316.6455 -7926.5264 8317.5527 y-7926.5264 8317.5938 -7926.5264 8317.5938 -7926.5049 8317.5938 c-7926.4414 8317.5938 -7926.0615 8317.0469 -7925.9351 8317.0469 c-7925.9146 8317.0469 -7925.8936 8317.0674 -7925.8936 8317.0889 c-7926.1675 8317.9951 -7926.1675 8318.1855 v-7926.1675 8318.249 -7926.1675 8318.2705 -7926.1465 8318.2705 c-7926.1055 8318.2705 -7925.6826 8317.7002 -7925.5562 8317.7002 c-7925.5352 8317.7002 -7925.5137 8317.7207 -7925.5137 8317.7422 c-7925.5137 8317.8057 -7925.7666 8318.5439 -7925.7666 8318.7119 c-7925.7666 8318.7549 -7925.7666 8318.7549 -7925.7446 8318.7549 c-7925.6826 8318.7549 -7925.4722 8318.5439 -7925.4297 8318.5439 c-7925.4082 8318.5439 -7925.3882 8318.5654 -7925.3882 8318.585 c-7925.3882 8318.6064 -7925.4927 8318.9658 -7925.4927 8319.0498 c-7925.4927 8319.0713 -7925.4927 8319.0713 -7925.4722 8319.0713 c-7925.4297 8319.0713 -7925.0918 8318.7119 -7925.0078 8318.7119 c-7924.9658 8318.7119 -7924.9233 8318.7549 -7924.9233 8318.8389 c-7924.9233 8318.9873 -7925.1138 8319.7041 -7925.1138 8319.7461 c-7925.1138 8319.8301 -7925.0918 8319.8721 -7925.0498 8319.8721 c-7924.9658 8319.8721 -7924.7119 8319.5557 -7924.6494 8319.5557 c-7924.5854 8319.5557 -7924.5439 8319.5762 -7924.5439 8319.6406 c-7924.5854 8320.0615 L-7924.5854 8320.126 -7924.5854 8320.1455 -7924.5654 8320.1455 c-7924.5225 8320.1455 -7924.2915 8319.8506 -7924.2065 8319.8506 c-7924.1006 8319.8506 -7924.1006 8320.3369 -7924.1006 8320.3994 c-7924.1006 8320.5049 -7924.0166 8320.5889 -7923.8896 8320.5889 c-7923.8057 8320.5889 -7923.4678 8320.3574 -7923.4473 8320.3574 c-7923.3623 8320.3574 -7923.3198 8320.7998 -7923.2568 8320.7998 c-7923.1943 8320.7998 -7922.9199 8320.6729 -7922.8564 8320.6729 c-7922.6455 8320.6729 -7922.6035 8320.7578 -7922.6035 8320.9258 c-7922.6255 8321.0742 L-7922.6255 8321.1162 -7922.6035 8321.1162 -7922.5835 8321.1162 c-7922.4985 8321.1162 -7922.2241 8320.8418 -7922.1392 8320.8418 c-7921.9287 8320.8418 -7919.8198 8322.9082 -7919.5454 8323.1826 c-7919.3984 8323.3506 -7919.3984 8323.6465 -7919.3984 8323.7734 c-7919.3984 8324.6377 -7919.3984 8324.7217 -7919.2295 8324.8057 c-7918.5977 8325.0586 -7918.5127 8325.207 -7917.7334 8326.4922 c-7917.6479 8326.6406 -7916.7407 8327.2529 -7916.5942 8327.2529 c-7916.4878 8327.2529 -7916.1094 8326.999 -7916.0239 8326.999 c-7915.9194 8326.999 -7915.8135 8327.0625 -7915.8135 8327.2305 c-7915.8135 8327.6738 -7916.3408 8328.1807 -7916.9312 8328.1807 c-7917.7534 8328.1807 -7918.0913 8327.4834 -7918.1338 8327.085 c-7918.1543 8326.9365 -7918.2393 8326.8506 -7918.3447 8326.8506 c-7918.3862 8326.8506 -7918.4287 8326.8721 -7918.4702 8326.9365 c-7918.9561 8327.7373 -7919.9473 8328.1807 -7920.7065 8328.1807 c-7921.7393 8328.1807 -7922.8774 8327.5479 -7923.3418 8327.2744 c-7923.7842 8327.0215 -7924.4814 8326.8506 -7924.8809 8326.8506 c-7925.3242 8326.8506 -7925.3662 8326.999 -7925.3662 8327.2529 c-7925.3662 8327.3994 -7924.9023 8327.8418 -7924.9023 8327.9697 c-7924.9023 8328.0957 -7925.0498 8328.1807 -7925.4082 8328.1807 c-7925.8936 8328.1807 -7926.5679 8327.4629 -7926.5679 8326.6826 c-7926.5679 8326.0713 -7925.7666 8325.5449 -7925.3022 8325.5449 c-7924.3755 8325.5449 -7924.0942 8325.9033 -7923.5264 8326.3672 c-7923.4414 8326.4297 -7923.3774 8326.4521 -7923.3359 8326.4521 c-7923.1895 8326.4521 -7923.1895 8325.3545 -7923.1895 8325.2295 c-7923.1895 8325.0801 -7923.2729 8325.0176 -7923.3774 8325.0176 c-7925.7822 8325.0176 -7930.6592 8323.793 -7932.3672 8317.6377 c-7932.4297 8317.4258 -7932.5361 8317.3213 -7932.6406 8317.3213 c-7932.7881 8317.3213 -7933.7793 8318.1641 -7933.7793 8319.7461 c-7933.7793 8321.5801 -7932.5767 8322.5498 -7931.9873 8322.5498 c-7931.8398 8322.5498 -7931.6494 8322.5293 -7931.6494 8322.3809 c-7931.6494 8322.3184 -7931.6929 8322.2549 -7931.7759 8322.1494 c-7932.1143 8321.8135 -7932.3672 8321.1797 -7932.3672 8320.8633 c-7932.3672 8320.6514 -7932.2607 8320.4834 -7932.1143 8320.4834 c-7931.9033 8320.4834 -7931.5654 8321.4326 -7931.46 8321.5801 c-7931.3335 8321.791 -7930.9546 8322.1709 -7930.2378 8322.6982 c-7929.4995 8323.2236 -7928.0654 8324.5322 -7928.0654 8325.7969 c-7928.0654 8327.1689 -7929.1191 8328.0752 -7929.9209 8328.0752 c-7930.7007 8328.0752 -7931.6714 8327.5479 -7932.0713 8327.0625 c-7932.7041 8326.3242 -7933.3154 8325.7549 -7933.8218 8325.7549 c-7934.1592 8325.7549 -7934.3066 8325.9658 -7934.3066 8326.1768 c-7934.3066 8326.5137 -7934.0537 8326.7461 -7933.5479 8326.7881 c-7932.9575 8326.8311 -7932.8936 8327.2529 -7932.8936 8327.5889 c-7932.8936 8327.8633 -7933.4209 8328.1807 -7933.8433 8328.1807 c-7934.4751 8328.1807 -7935.2974 8327.4834 -7935.2974 8325.6504 c-7935.2974 8324.1514 -7934.0537 8323.6895 -7933.5679 8323.6895 c-7933.1265 8323.6895 -7932.4722 8323.7734 -7932.0928 8324.1104 c-7930.8066 8325.3135 -7930.1318 8325.5225 -7929.5835 8325.5225 c-7929.3721 8325.5225 -7929.2881 8325.5225 -7929.2881 8325.6709 c-7929.2881 8325.9873 -7930.0474 8326.1768 -7930.1318 8326.1982 c-7930.3423 8326.2607 -7930.5103 8326.4922 -7930.5103 8326.7041 c-7930.5103 8327.1895 -7930.2378 8327.21 -7929.8774 8327.21 c-7929.5215 8327.21 -7928.8042 8326.8506 -7928.8042 8325.6504 c-7928.8042 8324.6592 -7929.9424 8323.499 -7930.4058 8323.2666 c-7930.7007 8323.0977 -7931.5874 8323.1201 -7931.9458 8323.0762 c-7932.6406 8322.9922 -7934.4121 8322.0449 -7934.4121 8319.5557 c-7934.4336 8318.1426 -7933.1265 8316.8154 -7932.8511 8316.626 c-7932.6826 8316.5186 -7932.5986 8316.3926 -7932.5986 8316.2236 c-7932.5986 8316.0127 -7932.6626 8313.082 -7932.9995 8313.082 c-7933.4424 8313.082 -7933.5054 8313.082 -7933.5054 8313.2734 c-7933.21 8314.3682 -7933.21 8314.6006 v-7933.21 8314.917 -7933.4424 8316.3926 -7934.3066 8316.3926 c-7934.5806 8316.3926 -7935.0449 8316.1602 -7935.0449 8315.8447 c-7935.0449 8315.5498 -7934.3486 8314.3477 -7934.3486 8314.0732 c-7934.3486 8313.5879 -7934.3921 8313.5674 -7935.0654 8312.9561 c-7935.2559 8312.8086 -7935.3193 8312.6826 -7935.3193 8312.4912 c-7935.3193 8312.3232 -7935.2134 8312.1953 -7935.0449 8312.1953 c-7934.8975 8312.1953 -7934.3281 8312.4717 -7934.2017 8312.4912 c-7934.0752 8312.4912 -7933.8433 8312.5127 -7933.6538 8312.5127 c-7933.2734 8312.5127 -7933.0845 8312.3857 -7933.0845 8312.2598 c-7933.0845 8312.0273 -7933.0845 8311.3535 -7933.9263 8309.8975 c-7934.1167 8309.5605 -7935.2974 8308.2314 -7935.2974 8307.8945 c-7935.2974 8307.7256 -7935.2134 8307.7061 -7935.1089 8307.7061 c-7934.9185 8307.7061 -7934.4966 8308.127 -7934.3706 8308.2744 c-7933.1265 8309.6025 -7932.3042 8311.0361 -7931.9238 8312.3018 c-7931.8398 8312.6182 -7931.7344 8312.5342 -7931.5654 8312.5557 c-7929.4155 8313.0615 -7927.3271 8315.5703 -7927.3271 8315.5918 c-7927.4326 8315.8652 -7927.4326 8315.9287 v-7927.4326 8316.0557 -7927.3271 8316.0762 -7927.3057 8316.0762 c-7927.2432 8316.0762 -7927.0527 8315.8652 -7927.0103 8315.8652 c-7926.9058 8315.8652 -7926.7783 8315.9502 -7926.7783 8316.0977 C-7926.8418 8316.6455 lf0 D-7930.1104 8315.1494 m-7929.5215 8315.1494 -7929.0986 8315.2549 -7928.6982 8315.5273 c-7928.6553 8315.5498 -7928.6138 8315.5703 -7928.5928 8315.5703 c-7928.5498 8315.5703 -7928.5498 8315.5498 -7928.5498 8315.5068 c-7928.5498 8315.085 -7930.4272 8313.126 -7931.5654 8313.126 c-7931.6289 8313.126 -7931.6714 8313.167 -7931.6714 8313.2295 c-7931.6714 8313.4199 -7931.5874 8315.4229 -7931.2495 8315.4229 c-7931.1865 8315.4229 -7931.1016 8315.4014 -7931.0386 8315.3594 c-7930.7007 8315.2119 -7930.4902 8315.1494 -7930.1104 8315.1494 cf-7929.5835 8317.9111 m-7929.5835 8317.4893 -7929.5625 8317.0254 -7928.8662 8317.0254 c-7928.2334 8317.0254 -7927.6431 8317.6797 -7927.4961 8317.8271 c-7927.4326 8317.8682 -7927.3906 8317.8896 -7927.3486 8317.8896 c-7927.3271 8317.8896 -7927.2847 8317.8477 -7927.2847 8317.8057 c-7927.2847 8317.3623 -7928.6553 8315.6973 -7930.0049 8315.6973 c-7930.2578 8315.6973 -7931.2705 8315.8652 -7931.2705 8316.4141 c-7931.2705 8316.667 -7930.8906 8318.0381 -7930.2793 8319.1133 c-7928.9087 8321.6016 -7924.7119 8323.1602 -7922.8145 8323.1602 c-7921.9072 8323.1826 -7921.6118 8322.8662 -7921.4863 8322.8447 c-7921.4648 8322.8447 -7921.4438 8322.8242 -7921.4233 8322.8242 c-7921.3174 8322.8242 -7921.1904 8322.8877 -7921.1904 8323.0352 c-7921.1904 8323.0566 -7921.2119 8323.0566 v-7921.3594 8324.1943 -7921.4014 8324.5957 -7921.4014 8325.8594 c-7921.4014 8327.2529 -7921.4014 8327.3789 -7920.4321 8327.3789 c-7919.1455 8327.3789 -7918.8506 8326.3037 -7918.8506 8326.0713 c-7918.8506 8325.6504 -7919.4399 8325.3545 -7919.5889 8325.3545 c-7919.7358 8325.3545 -7919.9058 8325.4609 -7919.9058 8325.6504 c-7919.9058 8325.9453 -7919.9473 8326.0928 -7920.2207 8326.0928 c-7920.4951 8326.0928 -7920.4951 8325.7344 -7920.4951 8325.6279 c-7920.4951 8325.376 -7920.3896 8325.123 -7920.1782 8324.9961 c-7919.7998 8324.7432 -7919.7998 8324.3418 -7919.7998 8324.1318 c-7919.7998 8324.0264 -7919.7998 8323.8994 -7919.8198 8323.793 c-7919.8418 8323.626 -7921.7817 8321.5801 -7922.0977 8321.5801 c-7922.2446 8321.5801 -7922.5615 8321.7266 -7923.4258 8321.7266 c-7925.5767 8321.7266 -7926.5474 8319.999 -7926.7378 8319.4717 c-7926.9897 8318.7549 -7927.7915 8318.459 -7928.0225 8318.459 c-7928.2129 8318.459 -7928.2129 8318.502 -7928.2129 8318.9023 c-7928.2129 8318.9873 -7928.4238 8319.3232 y-7928.4238 8319.5137 -7927.3906 8319.7666 -7927.3906 8319.9561 c-7927.3906 8320.126 -7927.5801 8320.1455 -7927.7271 8320.1455 c-7927.8115 8320.1455 -7928.8882 8320.1455 -7929.3306 8319.3232 c-7929.5415 8318.9229 -7929.5835 8318.3545 -7929.5835 8317.9111 cf1 D-7925.4927 8315.6553 m-7925.4927 8315.6113 -7925.5137 8315.5918 -7925.5352 8315.5918 c-7925.5986 8315.5918 -7925.7666 8315.9287 -7925.8506 8315.9287 c-7925.9146 8315.9287 -7925.9995 8315.8447 -7926.0415 8315.7383 c-7926.0615 8315.6553 -7926.1255 8315.1904 -7926.21 8315.1904 c-7926.2524 8315.1904 -7926.4209 8315.4229 -7926.4634 8315.4229 c-7926.6104 8315.4229 -7926.7158 8315.1904 -7926.7158 8314.9814 c-7926.7158 8314.875 -7926.7783 8314.875 -7926.9263 8314.875 c-7927.5166 8314.875 -7929.1406 8312.7031 -7929.5625 8310.9521 c-7929.6055 8310.7842 -7929.5835 8310.6367 -7929.8994 8310.5303 c-7932.0713 8309.793 -7934.5176 8307.6416 -7934.5176 8307.5146 c-7934.5176 8307.3682 -7934.4336 8307.2842 -7934.3066 8307.2842 c-7934.2432 8307.2842 -7934.1592 8307.2842 -7933.6538 8307.6201 c-7932.7681 8308.2109 -7930.7217 8309.498 -7929.8994 8309.498 c-7929.6265 8309.498 -7929.6055 8309.1387 -7929.6055 8308.8857 c-7929.6055 8308.6953 -7929.6265 8308.4639 -7929.6265 8308.3174 c-7929.6465 8308.043 -7929.9634 8307.7256 -7929.9634 8307.5576 c-7929.9634 8307.4102 -7929.8154 8307.3047 -7929.6465 8307.3047 c-7929.4575 8307.3047 -7929.3306 8307.3262 -7929.1606 8307.5146 c-7928.8662 8307.8525 -7928.7402 8308.001 -7928.4238 8308.001 c-7928.1914 8308.001 -7927.1377 8307.2842 -7926.8838 8307.2842 c-7926.5679 8307.2842 -7926.1895 8307.7686 -7926.1895 8308.0645 c-7926.1895 8308.8018 -7927.0942 8309.3926 -7927.6431 8309.3926 c-7928.0225 8309.3926 -7928.4438 8309.2666 -7928.6353 8309.0342 c-7928.6982 8308.9697 -7928.7607 8308.9287 -7928.8242 8308.9287 c-7928.9937 8308.9287 -7929.1191 8309.3926 -7929.1191 8309.4346 c-7929.1191 8309.8574 -7926.2729 8309.9189 -7925.9146 8309.9189 c-7925.7666 8309.9189 -7925.6401 8309.835 -7925.5352 8309.666 c-7925.3447 8309.3721 -7924.1855 8308.1494 -7922.6255 8308.1494 c-7920.79 8308.1494 -7919.0825 8309.4121 -7919.0825 8311.3105 c-7919.0825 8311.417 -7919.1245 8311.9639 -7919.1245 8311.9863 c-7919.1245 8312.0498 -7918.0063 8313.7979 -7916.6782 8313.7979 c-7915.6245 8313.7979 -7915.2656 8313.21 -7915.2656 8312.7227 c-7915.2656 8312.4912 -7915.3711 8311.8389 -7915.8984 8311.8389 c-7916.1094 8311.8389 -7916.2144 8312.0498 -7916.2144 8312.4287 c-7916.2144 8312.5127 -7916.0039 8312.8926 -7916.0039 8312.998 c-7916.0039 8313.04 -7916.0239 8313.0615 -7916.0879 8313.0615 c-7916.4258 8313.0615 -7916.9521 8312.7031 -7917.1846 8312.0498 c-7917.4595 8311.333 -7917.8594 8310.6367 -7918.1958 8310.2354 c-7918.5127 8309.877 -7918.6182 8309.2861 -7918.6182 8308.9482 c-7918.6182 8308.4639 -7918.1338 8307.3047 -7916.4878 8307.3047 c-7915.2871 8307.3047 -7914.4434 8308.043 -7914.4434 8308.6543 c-7914.4434 8309.2666 -7914.7598 8309.6455 -7915.2026 8309.6455 c-7915.6455 8309.6455 -7915.9824 8309.3066 -7915.9824 8308.9697 c-7915.9824 8308.2959 -7916.1514 8308.1494 -7916.4878 8308.1494 c-7916.6992 8308.1494 -7916.8896 8308.2744 -7916.8896 8308.5898 c-7916.8896 8308.8232 -7916.8896 8309.2021 -7915.3711 8310.4678 c-7914.8857 8310.8682 -7914.4214 8311.5654 -7914.4214 8312.3447 c-7914.4214 8313.1045 -7915.4561 8314.3047 -7916.6362 8314.3047 c-7917.8594 8314.3047 -7918.6401 8313.5254 -7919.2515 8312.8086 c-7919.5454 8312.4717 -7920.9814 8310.7842 -7921.0439 8310.7617 c-7921.2334 8310.6143 -7921.3174 8310.4893 -7921.3174 8310.3623 c-7921.3174 8310.2568 -7921.2119 8310.1514 -7921.0854 8310.1514 c-7920.8535 8310.1514 -7919.9058 8311.1006 -7919.8198 8311.1006 c-7919.7568 8311.1006 -7919.7153 8311.0361 -7919.7153 8310.9521 c-7919.7153 8310.1934 -7920.8535 8308.7178 -7922.6255 8308.7178 c-7924.1006 8308.7178 -7924.9863 8309.835 -7924.9863 8309.877 c-7924.9863 8310.0039 -7924.8394 8310.1289 -7924.5225 8310.1934 c-7920.6426 8310.9307 -7917.3955 8314.4814 -7917.3955 8319.0977 c-7917.3955 8319.2041 -7917.2256 8319.2305 -7917.0786 8319.2305 c-7916.7202 8319.2305 -7916.0879 8319.3096 -7916.0879 8319.0361 c-7916.0879 8318.9297 -7916.1294 8318.8037 -7916.1934 8318.6768 c-7916.5518 8318.1064 -7916.8682 8317.9326 -7916.8682 8316.9814 c-7916.8682 8316.5186 -7916.4878 8315.9922 -7915.8984 8315.9922 c-7914.8657 8315.9922 -7914.4214 8317.0254 -7914.4214 8317.2568 c-7914.4214 8317.4258 -7914.5073 8317.4893 -7914.5903 8317.4893 c-7914.7178 8317.4893 -7915.2241 8316.9609 -7915.3711 8316.9609 c-7915.5615 8316.9609 -7915.7085 8317.0039 -7915.7085 8317.4893 c-7915.7085 8317.8271 -7914.4214 8321.5381 -7914.4214 8322.3389 c-7914.4214 8322.9082 -7914.7598 8323.6055 -7915.6455 8324.1104 c-7915.6875 8324.1318 -7915.7085 8324.1514 -7915.7085 8324.1943 c-7915.7085 8324.2783 -7915.5615 8324.3848 -7915.4126 8324.4258 c-7914.8018 8324.5957 -7914.4214 8324.7002 -7914.4214 8325.6504 c-7914.4214 8326.0088 -7914.7598 8326.6826 -7915.0127 8326.6826 c-7915.2026 8326.6826 -7915.2026 8326.6406 -7915.2026 8326.2822 c-7915.2026 8326.1338 -7915.2446 8326.0293 -7915.3926 8325.9238 c-7915.7085 8325.7129 -7915.7295 8325.6709 -7915.8135 8325.1865 c-7915.8774 8324.8701 -7916.0039 8324.7842 -7917.1426 8324.1514 c-7917.5854 8323.8789 -7917.6904 8323.6465 -7917.7744 8323.415 c-7917.8594 8323.2236 -7917.9233 8323.2236 -7918.4287 8323.2236 c-7918.9561 8323.2236 -7921.5073 8320.5049 -7921.5073 8320.377 c-7921.5073 8320.3154 -7921.3809 8320.0186 -7921.3809 8319.9561 c-7921.3809 8319.8936 -7921.4014 8319.8506 -7921.4438 8319.8506 c-7921.4863 8319.8506 -7921.6338 8320.0615 -7921.6758 8320.0615 c-7921.7817 8320.0615 -7921.7817 8319.8721 -7921.7817 8319.7227 c-7921.7817 8319.6201 -7921.5703 8319.0498 -7921.5703 8318.9023 c-7921.5703 8318.8184 -7921.5918 8318.7549 -7921.6338 8318.7549 c-7921.7178 8318.7549 -7921.9072 8319.2178 -7921.9922 8319.2178 c-7922.0342 8319.2178 -7922.0762 8319.1768 -7922.0762 8319.0498 c-7922.0762 8318.9023 -7921.8862 8318.1855 y-7921.8862 8318.1221 -7921.9072 8318.0166 -7921.9502 8318.0166 c-7922.0342 8318.0166 -7922.1826 8318.417 -7922.2666 8318.417 c-7922.3286 8318.417 -7922.3926 8318.333 -7922.3926 8318.1855 c-7922.3926 8318.1006 -7922.2446 8317.6797 -7922.2446 8317.5742 c-7922.2446 8317.5098 -7922.2666 8317.4463 -7922.3086 8317.4463 c-7922.3506 8317.4463 -7922.5835 8318.0586 -7922.7095 8318.0586 c-7922.7935 8318.0586 -7922.8994 8317.9521 -7922.8994 8317.8477 c-7922.8994 8317.7637 -7922.7729 8317.4053 -7922.7729 8317.3213 c-7922.7729 8317.2783 -7922.7729 8317.2568 -7922.7935 8317.2568 c-7922.8774 8317.2568 -7923.0254 8317.7422 -7923.1104 8317.7422 c-7923.3418 8317.7422 -7923.3623 8317.3213 -7923.3623 8317.1309 c-7923.3623 8317.0469 -7923.2998 8316.71 -7923.2998 8316.6455 c-7923.2998 8316.583 -7923.3198 8316.5615 -7923.3418 8316.5615 c-7923.4897 8316.5615 -7923.6782 8317.3623 -7923.8271 8317.3623 c-7924.0386 8317.3623 -7924.0386 8317.1729 -7924.0386 8316.9414 c-7924.0166 8316.4141 L-7924.0166 8316.3926 -7924.0386 8316.3721 y-7924.0586 8316.3721 -7924.1006 8316.3926 -7924.1226 8316.4561 c-7924.1855 8316.667 -7924.3115 8317.0889 -7924.5225 8317.0889 c-7924.6694 8317.0889 -7924.8174 8316.9199 -7924.8174 8316.7734 c-7924.8174 8316.54 -7924.7119 8316.1602 -7924.7119 8315.9287 c-7924.7119 8315.8652 -7924.7334 8315.8447 -7924.7754 8315.8447 c-7924.8608 8315.8447 -7924.9863 8316.2861 -7925.0278 8316.3721 c-7925.0918 8316.4561 -7925.1553 8316.4775 -7925.2192 8316.4775 c-7925.5352 8316.4775 -7925.5352 8316.1602 -7925.5352 8316.0127 C-7925.4927 8315.6553 lf0 D-7926.8633 8311.29 m-7926.8633 8311.0576 -7928.8042 8310.8682 -7928.8662 8310.8682 c-7928.9722 8310.8682 -7929.0352 8310.9307 -7929.0352 8311.0361 c-7929.0352 8311.9014 -7927.2847 8314.1367 -7926.8633 8314.1367 c-7926.7998 8314.1367 -7926.7783 8314.1162 -7926.7783 8314.0527 c-7927.2002 8312.8086 -7927.2002 8312.5557 v-7927.2002 8312.1758 -7927.0942 8311.9229 -7926.9058 8311.501 c-7926.8838 8311.417 -7926.8633 8311.3535 -7926.8633 8311.29 cf-7918.1338 8322.7393 m-7917.9858 8322.7393 -7917.4795 8322.2344 -7917.3325 8322.2344 c-7917.2065 8322.2344 -7917.0791 8322.3184 -7917.0791 8322.4658 c-7917.0791 8322.5498 -7917.2695 8322.9922 -7917.2695 8323.0977 c-7917.2695 8323.4561 -7916.8896 8323.7529 -7916.5098 8323.7529 c-7916.1094 8323.7529 -7914.9702 8323.4346 -7914.9702 8322.2119 c-7914.9702 8321.1162 -7915.3926 8321.1162 -7917.0366 8321.1162 c-7917.3955 8321.1162 -7919.0615 8321.3057 -7919.3145 8321.3057 c-7919.4399 8321.3057 -7919.4834 8321.1367 -7919.4834 8321.0098 c-7919.4834 8320.9688 -7919.4834 8320.9258 -7919.4614 8320.9053 c-7919.3984 8320.5264 -7919.1675 8319.9775 -7919.1675 8319.5977 c-7919.1675 8315.1494 -7923.2998 8311.29 -7925.7666 8311.29 c-7926.4209 8311.29 -7926.6519 8312.0918 -7926.6519 8312.5127 c-7926.6519 8314.2422 -7924.6694 8315.2744 -7924.4175 8315.2744 c-7924.3545 8315.2744 -7924.3335 8315.2549 -7924.3335 8315.2119 c-7924.3335 8315.1689 -7924.3545 8315.1279 -7924.3975 8315.085 c-7924.5225 8314.917 -7925.0498 8314.3047 -7925.0498 8313.6729 c-7925.0498 8313.335 -7924.7554 8312.8926 -7923.9951 8312.8926 c-7922.7305 8312.8926 -7922.1826 8314.2422 -7922.1826 8314.6006 c-7922.1826 8314.749 -7922.2446 8314.959 -7922.4561 8314.959 c-7922.6035 8314.959 -7923.0049 8314.3047 -7923.1519 8314.3047 c-7923.2158 8314.3047 -7923.4473 8314.4316 -7923.5103 8314.4316 c-7923.5942 8314.4316 -7923.6582 8314.4111 -7923.7422 8314.4111 c-7923.8057 8314.4111 -7923.8481 8314.4736 -7923.8481 8314.5791 c-7923.8481 8314.9385 -7923.3623 8315.5068 -7922.8774 8315.7607 c-7921.9722 8316.2236 -7920.6226 8317.5527 -7920.6226 8319.0078 c-7920.6226 8319.4287 -7920.6846 8319.8301 -7920.6846 8320.167 c-7920.6846 8320.7158 -7919.7568 8321.5801 -7918.8081 8322.4658 c-7918.6401 8322.6133 -7918.3862 8322.7393 -7918.1338 8322.7393 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7909.9722 8332.46 m-7909.9722 8306.4326 L-7936 8306.4326 L-7936 8332.46 L-7909.9722 8332.46 Ln0 Ap0 R0.62356 0.54876 0.60592 0.352728 0.341176 0.329412 0.290196 XA0.375 w-7918.6455 8319.4492 m-7909.9736 8319.4492 lS-7922.9839 8332.46 m-7922.9839 8323.7842 lS0.636286 0.625879 0.658045 0.550133 0.258824 0.223529 0.196078 XA1.125 w-7918.7202 8315.1104 m-7909.9727 8315.1104 lS-7927.3232 8332.46 m-7927.3232 8323.1055 lS0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 XA-7918.6504 8332.46 m-7918.6504 8330.0469 l-7915.9937 8329.8232 -7914.3096 8328.1201 v-7912.6064 8326.3936 -7912.3774 8323.7881 y-7909.9727 8323.7881 lS*u0 O0.72137 0.63006 0.490974 0.378515 0.266667 0.27451 0.309804 Xa1 w-7926.7783 8316.0977 m-7926.7783 8315.9502 -7926.9058 8315.8652 -7927.0103 8315.8652 c-7927.0527 8315.8652 -7927.2432 8316.0762 -7927.3057 8316.0762 c-7927.3271 8316.0762 -7927.4326 8316.0557 -7927.4326 8315.9287 c-7927.4326 8315.8652 -7927.3271 8315.5918 y-7927.3271 8315.5703 -7929.4155 8313.0615 -7931.5654 8312.5557 c-7931.7344 8312.5342 -7931.8398 8312.6182 -7931.9238 8312.3018 c-7932.3042 8311.0361 -7933.1265 8309.6025 -7934.3706 8308.2744 c-7934.4966 8308.1279 -7934.9185 8307.7061 -7935.1089 8307.7061 c-7935.2134 8307.7061 -7935.2974 8307.7256 -7935.2974 8307.8945 c-7935.2974 8308.2314 -7934.1167 8309.5605 -7933.9263 8309.8975 c-7933.0845 8311.3535 -7933.0845 8312.0273 -7933.0845 8312.2598 c-7933.0845 8312.3857 -7933.2734 8312.5127 -7933.6538 8312.5127 c-7933.8433 8312.5127 -7934.0752 8312.4912 -7934.2017 8312.4912 c-7934.3281 8312.4717 -7934.8975 8312.1953 -7935.0449 8312.1953 c-7935.2134 8312.1953 -7935.3193 8312.3232 -7935.3193 8312.4912 c-7935.3193 8312.6826 -7935.2559 8312.8086 -7935.0654 8312.9561 c-7934.3921 8313.5674 -7934.3486 8313.5879 -7934.3486 8314.0732 c-7934.3486 8314.3477 -7935.0449 8315.5498 -7935.0449 8315.8447 c-7935.0449 8316.1602 -7934.5806 8316.3926 -7934.3066 8316.3926 c-7933.4424 8316.3926 -7933.21 8314.917 -7933.21 8314.6006 c-7933.21 8314.3682 -7933.5054 8313.2734 y-7933.5054 8313.082 -7933.4424 8313.082 -7932.9995 8313.082 c-7932.6626 8313.082 -7932.5986 8316.0127 -7932.5986 8316.2236 c-7932.5986 8316.3926 -7932.6826 8316.5186 -7932.8511 8316.626 c-7933.1265 8316.8154 -7934.4336 8318.1426 -7934.4121 8319.5557 c-7934.4121 8322.0449 -7932.6406 8322.9922 -7931.9458 8323.0762 c-7931.5874 8323.1201 -7930.7007 8323.0977 -7930.4058 8323.2666 c-7929.9424 8323.499 -7928.8042 8324.6592 -7928.8042 8325.6504 c-7928.8042 8326.8506 -7929.5215 8327.21 -7929.8774 8327.21 c-7930.2378 8327.21 -7930.5103 8327.1895 -7930.5103 8326.7041 c-7930.5103 8326.4922 -7930.3423 8326.2607 -7930.1318 8326.1982 c-7930.0474 8326.1768 -7929.2881 8325.9873 -7929.2881 8325.6709 c-7929.2881 8325.5225 -7929.3721 8325.5225 -7929.5835 8325.5225 c-7930.1318 8325.5225 -7930.8066 8325.3135 -7932.0928 8324.1104 c-7932.4722 8323.7734 -7933.1265 8323.6895 -7933.5679 8323.6895 c-7934.0537 8323.6895 -7935.2974 8324.1514 -7935.2974 8325.6504 c-7935.2974 8327.4834 -7934.4751 8328.1807 -7933.8433 8328.1807 c-7933.4209 8328.1807 -7932.8936 8327.8633 -7932.8936 8327.5889 c-7932.8936 8327.2529 -7932.9575 8326.8311 -7933.5479 8326.7881 c-7934.0537 8326.7461 -7934.3066 8326.5137 -7934.3066 8326.1768 c-7934.3066 8325.9658 -7934.1592 8325.7549 -7933.8218 8325.7549 c-7933.3154 8325.7549 -7932.7041 8326.3242 -7932.0713 8327.0625 c-7931.6714 8327.5479 -7930.7007 8328.0752 -7929.9209 8328.0752 c-7929.1191 8328.0752 -7928.0654 8327.1689 -7928.0654 8325.7969 c-7928.0654 8324.5322 -7929.4995 8323.2236 -7930.2378 8322.6982 c-7930.9546 8322.1709 -7931.3335 8321.791 -7931.46 8321.5801 c-7931.5654 8321.4326 -7931.9033 8320.4834 -7932.1143 8320.4834 c-7932.2607 8320.4834 -7932.3672 8320.6514 -7932.3672 8320.8633 c-7932.3672 8321.1797 -7932.1143 8321.8135 -7931.7759 8322.1494 c-7931.6929 8322.2549 -7931.6494 8322.3184 -7931.6494 8322.3809 c-7931.6494 8322.5293 -7931.8398 8322.5498 -7931.9873 8322.5498 c-7932.5767 8322.5498 -7933.7793 8321.5801 -7933.7793 8319.7461 c-7933.7793 8318.1641 -7932.7881 8317.3213 -7932.6406 8317.3213 c-7932.5361 8317.3213 -7932.4297 8317.4258 -7932.3672 8317.6377 c-7930.6592 8323.793 -7925.7822 8325.0176 -7923.3774 8325.0176 c-7923.2729 8325.0176 -7923.1895 8325.0801 -7923.1895 8325.2295 c-7923.1895 8325.3545 -7923.1895 8326.4521 -7923.3359 8326.4521 c-7923.3774 8326.4521 -7923.4414 8326.4297 -7923.5264 8326.3672 c-7924.0942 8325.9033 -7924.3755 8325.5449 -7925.3022 8325.5449 c-7925.7666 8325.5449 -7926.5679 8326.0713 -7926.5679 8326.6826 c-7926.5679 8327.4629 -7925.8936 8328.1807 -7925.4082 8328.1807 c-7925.0498 8328.1807 -7924.9023 8328.0957 -7924.9023 8327.9697 c-7924.9023 8327.8418 -7925.3662 8327.3994 -7925.3662 8327.2529 c-7925.3662 8326.999 -7925.3242 8326.8506 -7924.8809 8326.8506 c-7924.4814 8326.8506 -7923.7842 8327.0215 -7923.3418 8327.2744 c-7922.8774 8327.5479 -7921.7393 8328.1807 -7920.7065 8328.1807 c-7919.9473 8328.1807 -7918.9561 8327.7373 -7918.4702 8326.9365 c-7918.4287 8326.8721 -7918.3862 8326.8506 -7918.3447 8326.8506 c-7918.2393 8326.8506 -7918.1543 8326.9365 -7918.1338 8327.085 c-7918.0913 8327.4834 -7917.7534 8328.1807 -7916.9312 8328.1807 c-7916.3408 8328.1807 -7915.8135 8327.6738 -7915.8135 8327.2305 c-7915.8135 8327.0625 -7915.9194 8326.999 -7916.0239 8326.999 c-7916.1094 8326.999 -7916.4878 8327.2529 -7916.5942 8327.2529 c-7916.7407 8327.2529 -7917.6479 8326.6406 -7917.7334 8326.4922 c-7918.5127 8325.207 -7918.5977 8325.0586 -7919.2295 8324.8057 c-7919.3984 8324.7217 -7919.3984 8324.6377 -7919.3984 8323.7734 c-7919.3984 8323.6465 -7919.3984 8323.3506 -7919.5454 8323.1826 c-7919.8198 8322.9082 -7921.9287 8320.8418 -7922.1392 8320.8418 c-7922.2241 8320.8418 -7922.4985 8321.1162 -7922.5835 8321.1162 c-7922.6035 8321.1162 -7922.6255 8321.1162 -7922.6255 8321.0742 C-7922.6035 8320.9258 l-7922.6035 8320.7578 -7922.6455 8320.6729 -7922.8564 8320.6729 c-7922.9199 8320.6729 -7923.1943 8320.7998 -7923.2568 8320.7998 c-7923.3198 8320.7998 -7923.3623 8320.3574 -7923.4473 8320.3574 c-7923.4678 8320.3574 -7923.8057 8320.5889 -7923.8896 8320.5889 c-7924.0166 8320.5889 -7924.1006 8320.5049 -7924.1006 8320.3994 c-7924.1006 8320.3369 -7924.1006 8319.8506 -7924.2065 8319.8506 c-7924.2915 8319.8506 -7924.5225 8320.1455 -7924.5654 8320.1455 c-7924.5854 8320.1455 -7924.5854 8320.126 -7924.5854 8320.0615 C-7924.5439 8319.6406 l-7924.5439 8319.5762 -7924.5854 8319.5557 -7924.6494 8319.5557 c-7924.7119 8319.5557 -7924.9658 8319.8721 -7925.0498 8319.8721 c-7925.0918 8319.8721 -7925.1138 8319.8301 -7925.1138 8319.7461 c-7925.1138 8319.7041 -7924.9233 8318.9873 -7924.9233 8318.8389 c-7924.9233 8318.7549 -7924.9658 8318.7119 -7925.0078 8318.7119 c-7925.0918 8318.7119 -7925.4297 8319.0713 -7925.4722 8319.0713 c-7925.4927 8319.0713 -7925.4927 8319.0713 -7925.4927 8319.0498 c-7925.4927 8318.9658 -7925.3882 8318.6064 -7925.3882 8318.5869 c-7925.3882 8318.5654 -7925.4082 8318.5439 -7925.4297 8318.5439 c-7925.4722 8318.5439 -7925.6826 8318.7549 -7925.7446 8318.7549 c-7925.7666 8318.7549 -7925.7666 8318.7549 -7925.7666 8318.7119 c-7925.7666 8318.5439 -7925.5137 8317.8057 -7925.5137 8317.7422 c-7925.5137 8317.7207 -7925.5352 8317.7002 -7925.5562 8317.7002 c-7925.6826 8317.7002 -7926.1055 8318.2705 -7926.1465 8318.2705 c-7926.1675 8318.2705 -7926.1675 8318.249 -7926.1675 8318.1855 c-7926.1675 8317.9951 -7925.8936 8317.0889 y-7925.8936 8317.0674 -7925.9146 8317.0469 -7925.9351 8317.0469 c-7926.0615 8317.0469 -7926.4414 8317.5938 -7926.5049 8317.5938 c-7926.5264 8317.5938 -7926.5264 8317.5938 -7926.5264 8317.5527 c-7926.2729 8316.6455 -7926.2729 8316.5615 v-7926.2729 8316.4561 -7926.3154 8316.4141 -7926.3994 8316.4141 c-7926.4634 8316.4141 -7926.6943 8316.751 -7926.7783 8316.751 c-7926.8218 8316.751 -7926.8418 8316.71 -7926.8418 8316.6455 c-7926.7783 8316.0977 Lf1 D-7931.0386 8315.3594 m-7931.1016 8315.4014 -7931.1865 8315.4229 -7931.2495 8315.4229 c-7931.5874 8315.4229 -7931.6714 8313.4199 -7931.6714 8313.2295 c-7931.6714 8313.167 -7931.6289 8313.126 -7931.5654 8313.126 c-7930.4272 8313.126 -7928.5498 8315.0869 -7928.5498 8315.5068 c-7928.5498 8315.5498 -7928.5498 8315.5703 -7928.5928 8315.5703 c-7928.6138 8315.5703 -7928.6553 8315.5498 -7928.6982 8315.5273 c-7929.0986 8315.2549 -7929.5215 8315.1494 -7930.1104 8315.1494 c-7930.4902 8315.1494 -7930.7007 8315.2119 -7931.0386 8315.3594 cf-7929.3306 8319.3232 m-7928.8882 8320.1455 -7927.8115 8320.1455 -7927.7271 8320.1455 c-7927.5801 8320.1455 -7927.3906 8320.126 -7927.3906 8319.9561 c-7927.3906 8319.7666 -7928.4238 8319.5137 -7928.4238 8319.3232 c-7928.2129 8318.9873 -7928.2129 8318.9023 v-7928.2129 8318.5029 -7928.2129 8318.46 -7928.0225 8318.46 c-7927.7915 8318.46 -7926.9897 8318.7549 -7926.7378 8319.4717 c-7926.5474 8319.999 -7925.5767 8321.7266 -7923.4258 8321.7266 c-7922.5615 8321.7266 -7922.2446 8321.5801 -7922.0977 8321.5801 c-7921.7817 8321.5801 -7919.8418 8323.626 -7919.8198 8323.793 c-7919.7998 8323.8994 -7919.7998 8324.0264 -7919.7998 8324.1318 c-7919.7998 8324.3418 -7919.7998 8324.7432 -7920.1782 8324.9961 c-7920.3896 8325.123 -7920.4951 8325.376 -7920.4951 8325.6279 c-7920.4951 8325.7344 -7920.4951 8326.0928 -7920.2207 8326.0928 c-7919.9473 8326.0928 -7919.9058 8325.9453 -7919.9058 8325.6504 c-7919.9058 8325.4609 -7919.7358 8325.3545 -7919.5889 8325.3545 c-7919.4399 8325.3545 -7918.8506 8325.6504 -7918.8506 8326.0713 c-7918.8506 8326.3037 -7919.1455 8327.3789 -7920.4321 8327.3789 c-7921.4014 8327.3789 -7921.4014 8327.2529 -7921.4014 8325.8594 c-7921.4014 8324.5957 -7921.3594 8324.1943 -7921.2119 8323.0566 c-7921.1904 8323.0566 -7921.1904 8323.0352 y-7921.1904 8322.8877 -7921.3174 8322.8242 -7921.4233 8322.8242 c-7921.4438 8322.8242 -7921.4648 8322.8447 -7921.4863 8322.8447 c-7921.6118 8322.8662 -7921.9072 8323.1826 -7922.8145 8323.1602 c-7924.7119 8323.1602 -7928.9087 8321.6016 -7930.2793 8319.1133 c-7930.8906 8318.0381 -7931.2705 8316.667 -7931.2705 8316.4141 c-7931.2705 8315.8652 -7930.2578 8315.6973 -7930.0049 8315.6973 c-7928.6553 8315.6973 -7927.2847 8317.3623 -7927.2847 8317.8057 c-7927.2847 8317.8477 -7927.3271 8317.8896 -7927.3486 8317.8896 c-7927.3906 8317.8896 -7927.4326 8317.8682 -7927.4961 8317.8271 c-7927.6431 8317.6797 -7928.2334 8317.0254 -7928.8662 8317.0254 c-7929.5625 8317.0254 -7929.5835 8317.4893 -7929.5835 8317.9111 c-7929.5835 8318.3545 -7929.5415 8318.9229 -7929.3306 8319.3232 cf0 D-7925.5352 8316.0127 m-7925.5352 8316.1602 -7925.5352 8316.4775 -7925.2192 8316.4775 c-7925.1553 8316.4775 -7925.0918 8316.4561 -7925.0278 8316.3721 c-7924.9863 8316.2861 -7924.8608 8315.8447 -7924.7754 8315.8447 c-7924.7334 8315.8447 -7924.7119 8315.8652 -7924.7119 8315.9287 c-7924.7119 8316.1602 -7924.8174 8316.54 -7924.8174 8316.7734 c-7924.8174 8316.9199 -7924.6694 8317.0889 -7924.5225 8317.0889 c-7924.3115 8317.0889 -7924.1855 8316.667 -7924.1226 8316.4561 c-7924.1006 8316.3926 -7924.0586 8316.3721 -7924.0386 8316.3721 c-7924.0166 8316.3926 -7924.0166 8316.4141 V-7924.0386 8316.9414 l-7924.0386 8317.1729 -7924.0386 8317.3623 -7923.8271 8317.3623 c-7923.6782 8317.3623 -7923.4897 8316.5615 -7923.3418 8316.5615 c-7923.3198 8316.5615 -7923.2998 8316.583 -7923.2998 8316.6455 c-7923.2998 8316.71 -7923.3623 8317.0469 -7923.3623 8317.1309 c-7923.3623 8317.3213 -7923.3418 8317.7422 -7923.1104 8317.7422 c-7923.0254 8317.7422 -7922.8774 8317.2568 -7922.7935 8317.2568 c-7922.7729 8317.2568 -7922.7729 8317.2783 -7922.7729 8317.3213 c-7922.7729 8317.4053 -7922.8994 8317.7637 -7922.8994 8317.8477 c-7922.8994 8317.9521 -7922.7935 8318.0586 -7922.7095 8318.0586 c-7922.5835 8318.0586 -7922.3506 8317.4463 -7922.3086 8317.4463 c-7922.2666 8317.4463 -7922.2446 8317.5098 -7922.2446 8317.5742 c-7922.2446 8317.6797 -7922.3926 8318.1006 -7922.3926 8318.1855 c-7922.3926 8318.333 -7922.3286 8318.417 -7922.2666 8318.417 c-7922.1826 8318.417 -7922.0342 8318.0166 -7921.9502 8318.0166 c-7921.9072 8318.0166 -7921.8862 8318.1221 -7921.8862 8318.1855 c-7922.0762 8318.9023 -7922.0762 8319.0498 v-7922.0762 8319.1768 -7922.0342 8319.2178 -7921.9922 8319.2178 c-7921.9072 8319.2178 -7921.7178 8318.7549 -7921.6338 8318.7549 c-7921.5918 8318.7549 -7921.5703 8318.8184 -7921.5703 8318.9023 c-7921.5703 8319.0498 -7921.7817 8319.6201 -7921.7817 8319.7227 c-7921.7817 8319.8721 -7921.7817 8320.0615 -7921.6758 8320.0615 c-7921.6338 8320.0615 -7921.4863 8319.8506 -7921.4438 8319.8506 c-7921.4014 8319.8506 -7921.3809 8319.8936 -7921.3809 8319.9561 c-7921.3809 8320.0186 -7921.5073 8320.3154 -7921.5073 8320.377 c-7921.5073 8320.5049 -7918.9561 8323.2236 -7918.4287 8323.2236 c-7917.9233 8323.2236 -7917.8594 8323.2236 -7917.7744 8323.415 c-7917.6904 8323.6465 -7917.5854 8323.8789 -7917.1426 8324.1514 c-7916.0039 8324.7842 -7915.8774 8324.8701 -7915.8135 8325.1865 c-7915.7295 8325.6709 -7915.7085 8325.7129 -7915.3926 8325.9238 c-7915.2446 8326.0293 -7915.2026 8326.1338 -7915.2026 8326.2822 c-7915.2026 8326.6406 -7915.2026 8326.6826 -7915.0127 8326.6826 c-7914.7598 8326.6826 -7914.4214 8326.0088 -7914.4214 8325.6504 c-7914.4214 8324.7002 -7914.8018 8324.5957 -7915.4126 8324.4258 c-7915.5615 8324.3848 -7915.7085 8324.2783 -7915.7085 8324.1943 c-7915.7085 8324.1514 -7915.6875 8324.1318 -7915.6455 8324.1104 c-7914.7598 8323.6055 -7914.4214 8322.9082 -7914.4214 8322.3389 c-7914.4214 8321.5381 -7915.7085 8317.8271 -7915.7085 8317.4893 c-7915.7085 8317.0039 -7915.5615 8316.9609 -7915.3711 8316.9609 c-7915.2241 8316.9609 -7914.7178 8317.4893 -7914.5903 8317.4893 c-7914.5073 8317.4893 -7914.4214 8317.4258 -7914.4214 8317.2568 c-7914.4214 8317.0254 -7914.8657 8315.9922 -7915.8984 8315.9922 c-7916.4878 8315.9922 -7916.8682 8316.5186 -7916.8682 8316.9814 c-7916.8682 8317.9326 -7916.5518 8318.1064 -7916.1934 8318.6768 c-7916.1294 8318.8037 -7916.0879 8318.9297 -7916.0879 8319.0361 c-7916.0879 8319.3096 -7916.7202 8319.2305 -7917.0786 8319.2305 c-7917.2256 8319.2305 -7917.3955 8319.2041 -7917.3955 8319.0977 c-7917.3955 8314.4814 -7920.6426 8310.9307 -7924.5225 8310.1934 c-7924.8394 8310.1289 -7924.9863 8310.0039 -7924.9863 8309.877 c-7924.9863 8309.835 -7924.1006 8308.7178 -7922.6255 8308.7178 c-7920.8535 8308.7178 -7919.7153 8310.1934 -7919.7153 8310.9521 c-7919.7153 8311.0361 -7919.7568 8311.1006 -7919.8198 8311.1006 c-7919.9058 8311.1006 -7920.8535 8310.1514 -7921.0854 8310.1514 c-7921.2119 8310.1514 -7921.3174 8310.2568 -7921.3174 8310.3623 c-7921.3174 8310.4893 -7921.2334 8310.6143 -7921.0439 8310.7617 c-7920.9814 8310.7842 -7919.5454 8312.4717 -7919.2515 8312.8086 c-7918.6401 8313.5254 -7917.8594 8314.3047 -7916.6362 8314.3047 c-7915.4561 8314.3047 -7914.4214 8313.1045 -7914.4214 8312.3447 c-7914.4214 8311.5654 -7914.8857 8310.8682 -7915.3711 8310.4678 c-7916.8896 8309.2021 -7916.8896 8308.8232 -7916.8896 8308.5898 c-7916.8896 8308.2744 -7916.6992 8308.1494 -7916.4878 8308.1494 c-7916.1514 8308.1494 -7915.9824 8308.2959 -7915.9824 8308.9697 c-7915.9824 8309.3066 -7915.6455 8309.6455 -7915.2026 8309.6455 c-7914.7598 8309.6455 -7914.4434 8309.2666 -7914.4434 8308.6543 c-7914.4434 8308.0439 -7915.2871 8307.3047 -7916.4878 8307.3047 c-7918.1338 8307.3047 -7918.6182 8308.4639 -7918.6182 8308.9482 c-7918.6182 8309.2861 -7918.5127 8309.877 -7918.1958 8310.2354 c-7917.8594 8310.6367 -7917.4595 8311.333 -7917.1846 8312.0498 c-7916.9521 8312.7031 -7916.4258 8313.0615 -7916.0879 8313.0615 c-7916.0239 8313.0615 -7916.0039 8313.04 -7916.0039 8312.998 c-7916.0039 8312.8926 -7916.2144 8312.5127 -7916.2144 8312.4287 c-7916.2144 8312.0498 -7916.1094 8311.8389 -7915.8984 8311.8389 c-7915.3711 8311.8389 -7915.2656 8312.4912 -7915.2656 8312.7227 c-7915.2656 8313.21 -7915.6245 8313.7979 -7916.6782 8313.7979 c-7918.0063 8313.7979 -7919.1245 8312.0498 -7919.1245 8311.9863 c-7919.1245 8311.9639 -7919.0825 8311.417 -7919.0825 8311.3105 c-7919.0825 8309.4121 -7920.79 8308.1494 -7922.6255 8308.1494 c-7924.1855 8308.1494 -7925.3447 8309.3721 -7925.5352 8309.666 c-7925.6401 8309.835 -7925.7666 8309.9189 -7925.9146 8309.9189 c-7926.2729 8309.9189 -7929.1191 8309.8574 -7929.1191 8309.4346 c-7929.1191 8309.3926 -7928.9937 8308.9287 -7928.8242 8308.9287 c-7928.7607 8308.9287 -7928.6982 8308.9697 -7928.6353 8309.0342 c-7928.4438 8309.2666 -7928.0225 8309.3926 -7927.6431 8309.3926 c-7927.0942 8309.3926 -7926.1895 8308.8018 -7926.1895 8308.0645 c-7926.1895 8307.7686 -7926.5679 8307.2842 -7926.8838 8307.2842 c-7927.1377 8307.2842 -7928.1914 8308.001 -7928.4238 8308.001 c-7928.7402 8308.001 -7928.8662 8307.8525 -7929.1606 8307.5146 c-7929.3306 8307.3262 -7929.4575 8307.3047 -7929.6465 8307.3047 c-7929.8154 8307.3047 -7929.9634 8307.4102 -7929.9634 8307.5576 c-7929.9634 8307.7256 -7929.6465 8308.0439 -7929.6265 8308.3174 c-7929.6265 8308.4639 -7929.6055 8308.6953 -7929.6055 8308.8857 c-7929.6055 8309.1387 -7929.6265 8309.498 -7929.8994 8309.498 c-7930.7217 8309.498 -7932.7681 8308.2119 -7933.6538 8307.6201 c-7934.1592 8307.2842 -7934.2432 8307.2842 -7934.3066 8307.2842 c-7934.4336 8307.2842 -7934.5176 8307.3682 -7934.5176 8307.5146 c-7934.5176 8307.6416 -7932.0713 8309.793 -7929.8994 8310.5303 c-7929.5835 8310.6367 -7929.6055 8310.7842 -7929.5625 8310.9521 c-7929.1406 8312.7031 -7927.5166 8314.876 -7926.9263 8314.876 c-7926.7783 8314.876 -7926.7158 8314.876 -7926.7158 8314.9814 c-7926.7158 8315.1904 -7926.6104 8315.4229 -7926.4634 8315.4229 c-7926.4209 8315.4229 -7926.2524 8315.1904 -7926.21 8315.1904 c-7926.1255 8315.1904 -7926.0615 8315.6553 -7926.0415 8315.7383 c-7925.9995 8315.8447 -7925.9146 8315.9287 -7925.8506 8315.9287 c-7925.7666 8315.9287 -7925.5986 8315.5918 -7925.5352 8315.5918 c-7925.5137 8315.5918 -7925.4927 8315.6113 -7925.4927 8315.6553 c-7925.5352 8316.0127 Lf1 D-7926.9058 8311.501 m-7927.0942 8311.9229 -7927.2002 8312.1758 -7927.2002 8312.5557 c-7927.2002 8312.8086 -7926.7783 8314.0527 y-7926.7783 8314.1162 -7926.7998 8314.1367 -7926.8633 8314.1367 c-7927.2847 8314.1367 -7929.0352 8311.9014 -7929.0352 8311.0361 c-7929.0352 8310.9307 -7928.9722 8310.8682 -7928.8662 8310.8682 c-7928.8042 8310.8682 -7926.8633 8311.0576 -7926.8633 8311.29 c-7926.8633 8311.3535 -7926.8838 8311.417 -7926.9058 8311.501 cf-7918.8081 8322.4658 m-7919.7568 8321.5801 -7920.6846 8320.7158 -7920.6846 8320.167 c-7920.6846 8319.8301 -7920.6226 8319.4287 -7920.6226 8319.0078 c-7920.6226 8317.5527 -7921.9722 8316.2236 -7922.8774 8315.7607 c-7923.3623 8315.5068 -7923.8481 8314.9385 -7923.8481 8314.5791 c-7923.8481 8314.4736 -7923.8057 8314.4111 -7923.7422 8314.4111 c-7923.6582 8314.4111 -7923.5942 8314.4316 -7923.5103 8314.4316 c-7923.4473 8314.4316 -7923.2158 8314.3047 -7923.1519 8314.3047 c-7923.0049 8314.3047 -7922.6035 8314.96 -7922.4561 8314.96 c-7922.2446 8314.96 -7922.1826 8314.749 -7922.1826 8314.6006 c-7922.1826 8314.2422 -7922.7305 8312.8926 -7923.9951 8312.8926 c-7924.7554 8312.8926 -7925.0498 8313.335 -7925.0498 8313.6729 c-7925.0498 8314.3047 -7924.5225 8314.917 -7924.3975 8315.0869 c-7924.3545 8315.1279 -7924.3335 8315.1689 -7924.3335 8315.2119 c-7924.3335 8315.2549 -7924.3545 8315.2744 -7924.4175 8315.2744 c-7924.6694 8315.2744 -7926.6519 8314.2422 -7926.6519 8312.5127 c-7926.6519 8312.0918 -7926.4209 8311.29 -7925.7666 8311.29 c-7923.2998 8311.29 -7919.1675 8315.1494 -7919.1675 8319.5977 c-7919.1675 8319.9775 -7919.3984 8320.5264 -7919.4614 8320.9053 c-7919.4834 8320.9258 -7919.4834 8320.9688 -7919.4834 8321.0098 c-7919.4834 8321.1367 -7919.4399 8321.3057 -7919.3145 8321.3057 c-7919.0615 8321.3057 -7917.3955 8321.1162 -7917.0366 8321.1162 c-7915.3926 8321.1162 -7914.9702 8321.1162 -7914.9702 8322.2119 c-7914.9702 8323.4346 -7916.1094 8323.7529 -7916.5098 8323.7529 c-7916.8896 8323.7529 -7917.2695 8323.4561 -7917.2695 8323.0977 c-7917.2695 8322.9922 -7917.0791 8322.5498 -7917.0791 8322.4658 c-7917.0791 8322.3184 -7917.2065 8322.2344 -7917.3325 8322.2344 c-7917.4795 8322.2344 -7917.9858 8322.7393 -7918.1338 8322.7393 c-7918.3862 8322.7393 -7918.6401 8322.6133 -7918.8081 8322.4658 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ Ovale 2\312pt/ Adobe Calligraphic) -( Brush Tool/ Ovale 5\312pt/ Adobe Calligraphic Brush Tool/ Plat 5) -(\312pt/ Adobe Calligraphic Brush Tool/ Arrondi 3\312pt/ Adobe Callig) -(raphic Brush Tool/ Arrondi 7\312pt/ Adobe Calligraphic Brush Tool) -(/ Arrondi 15\312pt/ Adobe ArtOnPath Brush Tool/ Anthracite/ Adobe) -( ArtOnPath Brush Tool/ Contour fusel\216/ Adobe ArtOnPath Brush T) -(ool/ Contour floral/ Adobe PatternOnPath Brush Tool/ Forme fl\217) -(che rouge / Adobe PatternOnPath Brush Tool/ Gothique/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Arrondi 15\712pt)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Arrondi 3\712pt)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Arrondi 7\712pt)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Ovale 2\712pt)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Ovale 5\712pt)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Plat 5\712pt)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Anthracite)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Contour floral)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Contour fusel\616)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Forme fl\617che rouge )(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothique)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Rep\616rage]) 0 Xs([Rep\616rage])Pc0 0 0 0 1 1 1 Xa(Blanc)Pc0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa(Noir)Pc0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa(CMJN Rouge)Pc0.066896 0 0.877531 0 1 0.945098 0 Xa(CMJN Jaune)Pc0.797299 0 0.836789 0 0 0.647059 0.317647 Xa(CMJN Vert)Pc0.706264 0.151064 0 0 0 0.678431 0.933333 Xa(CMJN Cyan)Pc0.920684 0.911742 0 0 0.180392 0.192157 0.568627 Xa(CMJN Bleu)Pc0.003693 0.926177 0 0 0.921569 0 0.545098 Xa(CMJN Magenta)Pc0.179507 0.968261 0.850767 0.07715 0.745098 0.117647 0.176471 Xa(C=15 M=100 J=90 N=10)Pc0 0.856352 0.765133 0 0.933333 0.25098 0.211765 Xa(C=0 M=90 J=85 N=0)Pc0 0.761837 0.864897 0 0.941176 0.352941 0.156863 Xa(C=0 M=80 J=95 N=0)Pc0 0.519036 0.914122 0 0.964706 0.572549 0.117647 Xa(C=0 M=50 J=100 N=0)Pc0 0.37937 0.799832 0 0.980392 0.686275 0.25098 Xa(C=0 M=35 J=85 N=0)Pc0.08127 0 0.835813 0 0.976471 0.92549 0.192157 Xa(C=5 M=0 J=90 N=0)Pc0.243046 0 0.886046 0 0.839216 0.870588 0.137255 Xa(C=20 M=0 J=100 N=0)Pc0.530205 0 0.871122 0 0.545098 0.772549 0.247059 Xa(C=50 M=0 J=100 N=0)Pc0.73312 0 0.860319 0 0.215686 0.701961 0.290196 Xa(C=75 M=0 J=100 N=0)Pc0.835416 0.121401 0.891905 0.007782 0 0.576471 0.270588 Xa(C=85 M=10 J=100 N=10)Pc0.873686 0.338201 0.893889 0.230228 0 0.407843 0.219608 Xa(C=90 M=30 J=95 N=30)Pc0.743069 0 0.674311 0 0.160784 0.705882 0.45098 Xa(C=75 M=0 J=75 N=0)Pc0.777249 0.057679 0.429908 0 0 0.65098 0.611765 Xa(C=80 M=10 J=45 N=0)Pc0.715724 0.149874 0 0 0.14902 0.662745 0.878431 Xa(C=70 M=15 J=0 N=0)Pc0.831205 0.490761 0 0 0.105882 0.458824 0.733333 Xa(C=85 M=50 J=0 N=0)Pc0.924163 0.87863 0 0 0.168627 0.219608 0.560784 Xa(C=100 M=95 J=5 N=0)Pc0.956939 1 0.25861 0.18027 0.14902 0.133333 0.380392 Xa(C=100 M=100 J=25 N=25)Pc0.740597 0.92929 0 0 0.396078 0.176471 0.564706 Xa(C=75 M=100 J=0 N=0)Pc0.537804 0.929015 0 0 0.564706 0.152941 0.556863 Xa(C=50 M=100 J=0 N=0)Pc0.399756 0.966522 0.2934 0.065919 0.619608 0.121569 0.388235 Xa(C=35 M=100 J=35 N=10)Pc0.074708 0.954101 0.413123 0.001495 0.85098 0.109804 0.360784 Xa(C=10 M=100 J=50 N=0)Pc0 0.902251 0.133944 0 0.92549 0.160784 0.482353 Xa(C=0 M=95 J=20 N=0)Pc0.294102 0.274144 0.402502 0 0.756863 0.705882 0.603922 Xa(C=25 M=25 J=40 N=0)Pc0.436957 0.466377 0.467628 0.060548 0.603922 0.517647 0.47451 Xa(C=40 M=45 J=50 N=5)Pc0.550225 0.521904 0.576074 0.232547 0.443137 0.396078 0.345098 Xa(C=50 M=50 J=60 N=25)Pc0.578851 0.605066 0.616449 0.408789 0.352941 0.290196 0.258824 Xa(C=55 M=60 J=65 N=40)Pc0.269932 0.417212 0.602716 0.016663 0.764706 0.6 0.419608 Xa(C=25 M=40 J=65 N=0)Pc0.342046 0.503136 0.706813 0.101961 0.658824 0.486275 0.309804 Xa(C=30 M=50 J=75 N=10)Pc0.393439 0.596673 0.764614 0.258701 0.541176 0.364706 0.231373 Xa(C=35 M=60 J=80 N=25)Pc0.424842 0.632654 0.871397 0.383764 0.458824 0.298039 0.156863 Xa(C=40 M=65 J=90 N=35)Pc0.437263 0.693172 1 0.51931 0.376471 0.219608 0.07451 Xa(C=40 M=70 J=100 N=50)Pc0.529686 0.733516 0.888579 0.727108 0.231373 0.137255 0.078431 Xa(C=50 M=70 J=80 N=70)PcBb2 (D\616grad\616 lin\616aire) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(D\616grad\616 lin\616aire)PcBb2 (Fondu noir) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fondu noir)PcBb0 0 0 0 Bh2 (D\616grad\616 radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(D\616grad\616 radial)PcBb0 0 0 0 Bh2 (Vignette noire adoucie) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Vignette noire adoucie)PcBb2 (Coucher de soleil \(d\616sert\)) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Coucher de soleil \(d\616sert\))PcBb0 0 0 0 Bh2 (Radial cuivr\616) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial cuivr\616)Pc(Motif poisson) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Motif poisson)Pc0.730129 0.711116 0.636835 0.762051 0.137255 0.121569 0.12549 Xa(C=0 M=0 J=0 N=100)Pc0.699977 0.617609 0.565789 0.464118 0.25098 0.25098 0.254902 Xa(C=0 M=0 J=0 N=90)Pc0.655329 0.560204 0.504021 0.275059 0.345098 0.34902 0.356863 Xa(C=0 M=0 J=0 N=80)Pc0.603326 0.50399 0.453925 0.147341 0.427451 0.431373 0.439216 Xa(C=0 M=0 J=0 N=70)Pc0.550133 0.45005 0.394629 0.059052 0.501961 0.505882 0.517647 Xa(C=0 M=0 J=0 N=60)Pc0.492531 0.386633 0.342779 0.011963 0.572549 0.580392 0.592157 Xa(C=0 M=0 J=0 N=50)Pc0.411139 0.312749 0.275364 0 0.65098 0.658824 0.670588 Xa(C=0 M=0 J=0 N=40)Pc0.313756 0.22916 0.207156 0 0.733333 0.741176 0.74902 Xa(C=0 M=0 J=0 N=30)Pc0.219089 0.150149 0.142763 0 0.815686 0.823529 0.827451 Xa(C=0 M=0 J=0 N=20)Pc0.120241 0.079866 0.072541 0 0.901961 0.905882 0.909804 Xa(C=0 M=0 J=0 N=10)Pc0.064485 0.046387 0.036957 0 0.945098 0.945098 0.94902 Xa(C=0 M=0 J=0 N=5)Pc0 0.943328 0.891936 0.000549 0.92549 0.109804 0.141176 Xa(C=0 M=100 J=100 N=0)Pc0 0.716213 0.899199 0 0.945098 0.396078 0.133333 Xa(C=0 M=75 J=100 N=0)Pc0.015869 0.098238 0.8981 0 1 0.866667 0.082353 Xa(C=0 M=10 J=95 N=0)Pc0.809689 0.002502 0.867491 0 0 0.631373 0.294118 Xa(C=85 M=10 J=100 N=0)Pc0.922759 0.820706 0 0 0.133333 0.25098 0.6 Xa(C=100 M=90 J=0 N=0)Pc0.611841 0.85211 0 0 0.498039 0.247059 0.592157 Xa(C=60 M=90 J=0 N=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 1 1 255 79 79 0 50 Lb(TRAME DEF) Ln1 A0 Auu0 D0 R0.120241 0.079866 0.072541 0 0.901961 0.905882 0.909804 XA0 J 0 j 1 w 4 M []0 d0 XR510.2363 151.4648 m510.2363 153.4082 L510.1982 152.7637 510.1982 152.1152 510.2363 151.4648 Cs507.2275 146.6406 m507.8936 144.3496 508.9268 142.2617 510.2363 140.416 C510.2363 164.4312 L506.7021 159.4429 505.3906 152.9629 507.2275 146.6406 cs503.2148 146.6816 m504.373 141.8672 506.8809 137.7305 510.2363 134.5586 C510.2363 170.2983 L504.0547 164.4351 501.083 155.5454 503.2148 146.6816 cs499.2041 146.7207 m500.6777 139.5293 504.7451 133.5273 510.2363 129.4824 C510.2363 175.3774 L501.5674 168.9761 496.9053 157.9478 499.2041 146.7207 cs495.1924 146.7598 m496.8838 137.248 502.5771 129.4492 510.2363 124.7617 C510.2363 180.0991 L499.1611 173.3237 492.7861 160.2827 495.1924 146.7598 cs491.1816 146.8008 m493.0342 134.9961 500.3887 125.4102 510.2363 120.2266 C510.2363 184.6265 L496.8037 177.5698 488.7012 162.5815 491.1816 146.8008 cs487.168 146.8398 m489.1436 132.7617 498.1943 121.4121 510.2363 115.8301 C510.2363 189.0366 L494.4795 181.7612 484.6387 164.8618 487.168 146.8398 cs483.1572 146.8789 m485.2275 130.5371 495.9902 117.4141 510.2363 111.5078 C510.2363 193.3511 L492.1807 185.8979 480.5928 167.1294 483.1572 146.8789 cs479.1455 146.9199 m481.29 128.3203 493.7822 113.4238 510.2363 107.2461 C510.2363 197.6177 L489.8965 190.0181 476.5537 169.3901 479.1455 146.9199 cs475.1338 146.959 m477.3369 126.1094 491.5693 109.4316 510.2363 103.0234 C510.2363 201.8237 L487.6299 194.1021 472.5254 171.6411 475.1338 146.959 cs471.1211 146.998 m473.3721 123.9023 489.3545 105.4355 510.2363 98.832 C510.2363 206.0151 L485.3672 198.189 468.502 173.8931 471.1211 146.998 cs467.1104 147.0371 m469.3975 121.6992 487.1396 101.4648 510.2363 94.6875 C510.2363 210.1714 L483.1162 202.2573 464.4834 176.1401 467.1104 147.0371 cs463.0986 147.0781 m465.4141 119.4961 484.917 97.4551 510.2363 90.5332 C510.2363 214.2974 L480.873 206.3013 460.4678 178.3843 463.0986 147.0781 cs459.0859 147.1172 m461.4258 117.3008 482.7002 93.4922 510.2363 86.4336 C510.2363 218.4136 L478.6348 210.3491 456.4561 180.6274 459.0859 147.1172 cs455.0742 147.1563 m457.4326 115.1035 480.4775 89.498 510.2363 82.3203 C510.2363 222.522 L476.3994 214.395 452.4482 182.8696 455.0742 147.1563 cs451.0625 147.1973 m453.4336 112.9102 478.2549 85.5078 510.2363 78.2266 C510.2363 226.6245 L474.167 218.4458 448.4404 185.1128 451.0625 147.1973 cs447.0518 147.2363 m449.4326 110.7188 476.0322 81.5352 510.2363 74.1563 C510.2363 230.7056 L471.9395 222.4761 444.4355 187.3511 447.0518 147.2363 cs443.04 147.2754 m445.4277 108.5254 473.8086 77.5391 510.2363 70.0742 C510.2363 234.7681 L469.7168 226.4937 440.4326 189.5894 443.04 147.2754 cs439.0283 147.3145 m441.4189 106.332 471.5791 73.5293 510.2363 65.9902 C510.2363 238.8472 L467.4912 230.5347 436.4287 191.8296 439.0283 147.3145 cs435.0156 147.3555 m437.4102 104.1426 469.3535 69.5488 510.2363 61.9355 C510.2363 242.9116 L465.2715 234.562 432.4277 194.0669 435.0156 147.3555 cs431.0039 147.3945 m433.3975 101.9531 467.127 65.5527 510.2363 57.875 C510.2363 246.9663 L463.0527 238.5825 428.4277 196.3052 431.0039 147.3945 cs426.9922 147.4336 m429.3838 99.7656 464.9004 61.5664 510.2363 53.8281 C510.2363 251.0132 L460.8369 242.5981 424.4277 198.5415 426.9922 147.4336 cs422.9805 147.4746 m425.3691 97.5781 462.6729 57.5762 510.2363 49.7832 C510.2363 255.0581 L458.6221 246.6138 420.4297 200.7769 422.9805 147.4746 cs418.9697 147.5137 m421.3525 95.3887 460.4434 53.5781 510.2363 45.7344 C510.2363 259.1011 L456.4082 250.6304 416.4307 203.0151 418.9697 147.5137 cs414.958 147.5527 m417.334 93.2012 458.2148 49.5957 510.2363 41.7012 C510.2363 263.1401 L454.1953 254.645 412.4346 205.2515 414.958 147.5527 cs410.9453 147.5918 m413.3154 91.0156 455.9873 45.6055 510.2363 37.668 C510.2363 267.1792 L451.9824 258.6606 408.4365 207.4868 410.9453 147.5918 cs406.9336 147.6328 m409.2939 88.8301 453.7578 41.6094 510.2363 33.6309 C510.2363 271.2163 L449.7715 262.6772 404.4404 209.7231 406.9336 147.6328 cs402.9219 147.6719 m405.2725 86.6406 451.5283 37.6152 510.2363 29.5977 C510.2363 275.2427 L447.5625 266.6841 400.4443 211.9595 402.9219 147.6719 cs398.9102 147.7109 m401.251 84.457 449.2988 33.6309 510.2363 25.5742 C510.2363 279.2671 L445.3545 270.6899 396.4492 214.1938 398.9102 147.7109 cs394.8984 147.75 m397.2285 82.2715 447.0693 29.6406 510.2363 21.5508 C510.2363 283.2925 L443.1465 274.6968 392.4541 216.4272 394.8984 147.75 cs390.8867 147.791 m393.2061 80.0879 444.8398 25.6445 510.2363 17.5234 C510.2363 287.3169 L440.9385 278.7046 388.46 218.6636 390.8867 147.791 cs386.875 147.8301 m389.1816 77.9004 442.6074 21.6465 510.2363 13.4941 C510.2363 291.3403 L438.7314 282.7114 384.4648 220.8999 386.875 147.8301 cs382.8623 147.8691 m385.1572 75.7168 440.3779 17.6563 510.2363 9.47461 C510.2363 295.3618 L436.5234 286.7192 380.4688 223.1333 382.8623 147.8691 cs378.8516 147.9082 m381.1328 73.5332 438.1484 13.668 510.2363 5.45898 C510.2363 299.3833 L434.3184 290.7261 376.4756 225.3677 378.8516 147.9082 cs374.8398 147.9492 m377.1064 71.3496 435.917 9.67969 510.2363 1.44336 C510.2363 303.4038 L432.1123 294.7349 372.4805 227.604 374.8398 147.9492 cs370.8281 147.9883 m372.9209 74.752 425.3896 14.7637 494.2148 0 C510.2363 0 L510.2363 307.4243 L429.9063 298.7427 368.4873 229.8394 370.8281 147.9883 cs366.8154 148.0293 m368.7451 78.1816 415.3584 20.041 478.6289 0 C510.2363 0 L510.2363 311.4429 L427.7002 302.7495 364.4941 232.0737 366.8154 148.0293 cs488.7852 311.811 m414.7891 294.1499 360.7002 226.8706 362.8047 148.0664 c364.6113 80.4297 407.3066 23.459 466.6885 0 C510.2363 0 L510.2363 311.811 L488.7852 311.811 Ls474.167 311.811 m405.5342 289.1392 356.8359 223.8403 358.792 148.1074 c360.498 82.1055 400.2207 25.9922 456.5439 0 C510.2363 0 L510.2363 311.811 L474.167 311.811 Ls462.5566 311.811 m397.8496 285.7202 352.9404 221.769 354.7813 148.1484 c356.3975 83.4473 393.7061 28 447.4717 0 C510.2363 0 L510.2363 311.811 L462.5566 311.811 Ls452.5283 311.811 m390.9814 283.1235 349.0254 220.1938 350.7686 148.1855 c352.3096 84.5645 387.5791 29.6523 439.1309 0 C510.2363 0 L510.2363 311.811 L452.5283 311.811 Ls443.5059 311.811 m384.627 281.0415 345.0996 218.9272 346.7578 148.2266 c348.2285 85.5059 381.7617 31.0449 431.3799 0 C510.2363 0 L510.2363 311.811 L443.5059 311.811 Ls435.1748 311.811 m378.624 279.312 341.1641 217.8706 342.7461 148.2676 c344.1523 86.332 376.1445 32.2461 424.0186 0 C510.2363 0 L510.2363 311.811 L435.1748 311.811 Ls427.4033 311.811 m372.9023 277.8452 337.2217 216.981 338.7344 148.3047 c340.083 87.0488 370.7227 33.293 417.0293 0 C510.2363 0 L510.2363 311.811 L427.4033 311.811 Ls420.0107 311.811 m367.3672 276.5776 333.2725 216.2007 334.7217 148.3457 c336.0176 87.6875 365.4414 34.2168 410.3145 0 C510.2363 0 L510.2363 311.811 L420.0107 311.811 Ls412.9951 311.811 m362.0215 275.4692 329.3193 215.5288 330.71 148.3848 c331.9561 88.2637 360.2764 35.041 403.8281 0 C510.2363 0 L510.2363 311.811 L412.9951 311.811 Ls406.2373 311.811 m356.8008 274.4888 325.3613 214.9302 326.6982 148.4258 c327.8975 88.7852 355.2119 35.7832 397.541 0 C510.2363 0 L510.2363 311.811 L406.2373 311.811 Ls399.708 311.811 m351.6904 273.6128 321.3994 214.395 322.6865 148.4648 c323.8418 89.2598 350.2324 36.4512 391.4229 0 C510.2363 0 L510.2363 311.811 L399.708 311.811 Ls393.375 311.811 m346.6748 272.8257 317.4355 213.9146 318.6748 148.5039 c319.7891 89.6973 345.3232 37.0645 385.4512 0 C510.2363 0 L510.2363 311.811 L393.375 311.811 Ls387.2129 311.811 m341.7422 272.1147 313.4678 213.48 314.6641 148.5449 c315.7393 90.1016 340.4746 37.6191 379.6045 0 C510.2363 0 L510.2363 311.811 L387.2129 311.811 Ls381.1992 311.811 m336.8779 271.4663 309.498 213.0835 310.6514 148.582 c311.6904 90.4668 335.7012 38.1328 373.8975 0 C510.2363 0 L510.2363 311.811 L381.1992 311.811 Ls375.3096 311.811 m332.0703 270.8755 305.5254 212.7192 306.6387 148.623 c307.6436 90.8086 330.9746 38.6074 368.29 0 C510.2363 0 L510.2363 311.811 L375.3096 311.811 Ls369.5313 311.811 m327.3154 270.3325 301.5518 212.3843 302.6279 148.6621 c303.5996 91.1328 326.2832 39.0449 362.7607 0 C510.2363 0 L510.2363 311.811 L369.5313 311.811 Ls363.8867 311.811 m322.6289 269.8335 297.5752 212.0825 298.6172 148.7012 c299.5566 91.4336 321.6357 39.4512 357.3193 0 C510.2363 0 L510.2363 311.811 L363.8867 311.811 Ls358.3242 311.811 m317.9775 269.3706 293.5986 211.8032 294.6055 148.7422 c295.5146 91.7129 317.0352 39.832 351.9688 0 C510.2363 0 L510.2363 311.811 L358.3242 311.811 Ls352.832 311.811 m313.3535 268.9448 289.6182 211.5396 290.5928 148.7813 c291.4736 91.9805 312.4473 40.1875 346.6621 0 C510.2363 0 L510.2363 311.811 L352.832 311.811 Ls347.4277 311.811 m308.7734 268.5474 285.6367 211.2974 286.5801 148.8203 c287.4346 92.2285 307.9131 40.5195 341.4482 0 C510.2363 0 L510.2363 311.811 L347.4277 311.811 Ls342.1025 311.811 m304.2305 268.1753 281.6553 211.0747 282.5693 148.8594 c283.3975 92.4668 303.3906 40.832 336.2725 0 C510.2363 0 L510.2363 311.811 L342.1025 311.811 Ls336.8105 311.811 m299.6943 267.8315 277.6719 210.8608 278.5576 148.9004 c279.3613 92.6895 298.9023 41.127 331.1611 0 C510.2363 0 L510.2363 311.811 L336.8105 311.811 Ls331.6201 311.811 m295.2148 267.5073 273.6875 210.6704 274.5459 148.9414 c275.3242 92.9023 294.4316 41.4004 326.0918 0 C510.2363 0 L510.2363 311.811 L331.6201 311.811 Ls326.4531 311.811 m290.7363 267.2036 269.7012 210.4829 270.5342 148.9785 c271.29 93.1035 289.9883 41.6621 321.0781 0 C510.2363 0 L510.2363 311.811 L326.4531 311.811 Ls321.3574 311.811 m286.2979 266.9194 265.7158 210.314 266.5234 149.0195 c267.2568 93.2969 285.5547 41.9121 316.0928 0 C510.2363 0 L510.2363 311.811 L321.3574 311.811 Ls316.2891 311.811 m281.8643 266.6519 261.7266 210.1509 262.5098 149.0586 c263.2227 93.4805 281.1543 42.1465 311.167 0 C510.2363 0 L510.2363 311.811 L316.2891 311.811 Ls311.2832 311.811 m277.4639 266.3989 257.7383 210.0024 258.498 149.0977 c259.1895 93.6621 276.7461 42.3672 306.2451 0 C510.2363 0 L510.2363 311.811 L311.2832 311.811 Ls306.2959 311.811 m273.0635 266.1606 253.748 209.8569 254.4863 149.1387 c255.1582 93.8242 272.3887 42.582 301.4023 0 C510.2363 0 L510.2363 311.811 L306.2959 311.811 Ls301.375 311.811 m268.7021 265.9351 249.7583 209.7251 250.4746 149.1777 c251.1284 93.9883 268.0225 42.7832 296.5635 0 C510.2363 0 L510.2363 311.811 L301.375 311.811 Ls296.4502 311.811 m264.3262 265.7241 245.7671 209.5942 246.4629 149.2168 c247.0972 94.1426 263.6758 42.9746 291.7617 0 C510.2363 0 L510.2363 311.811 L296.4502 311.811 Ls291.6055 311.811 m260 265.52 241.7754 209.481 242.4507 149.2578 c243.0674 94.291 259.3496 43.1621 286.998 0 C510.2363 0 L510.2363 311.811 L291.6055 311.811 Ls286.7617 311.811 m255.6621 265.3296 237.7837 209.3667 238.4395 149.2969 c239.0386 94.4375 255.0156 43.3359 282.2383 0 C510.2363 0 L510.2363 311.811 L286.7617 311.811 Ls281.957 311.811 m251.3457 265.1489 233.7905 209.2593 234.4282 149.3359 c235.0107 94.5742 250.7153 43.5039 277.5283 0 C510.2363 0 L510.2363 311.811 L281.957 311.811 Ls277.1865 311.811 m247.0464 264.9751 229.7964 209.1616 230.416 149.375 c230.9824 94.707 246.4214 43.666 272.8389 0 C510.2363 0 L510.2363 311.811 L277.1865 311.811 Ls272.415 311.811 m242.7358 264.812 225.8018 209.063 226.4038 149.416 c226.9546 94.8398 242.1196 43.8203 268.1504 0 C510.2363 0 L510.2363 311.811 L272.415 311.811 Ls267.7041 311.811 m238.4639 264.6538 221.8071 208.9761 222.3926 149.4551 c222.9277 94.9629 237.8486 43.9707 263.5088 0 C510.2363 0 L510.2363 311.811 L267.7041 311.811 Ls263.0039 311.811 m234.1919 264.5063 217.812 208.8901 218.3804 149.4941 c218.9014 95.082 233.5864 44.1152 258.8867 0 C510.2363 0 L510.2363 311.811 L263.0039 311.811 Ls258.3008 311.811 m229.9097 264.3657 213.8169 208.8052 214.3691 149.5332 c214.8755 95.2012 229.3179 44.252 254.2666 0 C510.2363 0 L510.2363 311.811 L258.3008 311.811 Ls253.6587 311.811 m225.668 264.228 209.8203 208.7319 210.3574 149.5742 c210.8491 95.3164 225.0586 44.3828 249.666 0 C510.2363 0 L510.2363 311.811 L253.6587 311.811 Ls249.0229 311.811 m221.4229 264.0981 205.8237 208.6606 206.3452 149.6133 c206.8237 95.4219 220.8267 44.5117 245.1069 0 C510.2363 0 L510.2363 311.811 L249.0229 311.811 Ls244.3857 311.811 m217.1685 263.9761 201.8262 208.5884 202.3335 149.6523 c202.7988 95.5293 216.5908 44.6348 240.5508 0 C510.2363 0 L510.2363 311.811 L244.3857 311.811 Ls239.791 311.811 m212.9424 263.8579 197.8291 208.5249 198.3223 149.6934 c198.7749 95.6367 212.3491 44.752 235.9946 0 C510.2363 0 L510.2363 311.811 L239.791 311.811 Ls235.2158 311.811 m208.7251 263.7417 193.8311 208.4644 194.3101 149.7305 c194.7505 95.7383 208.127 44.8672 231.4702 0 C510.2363 0 L510.2363 311.811 L235.2158 311.811 Ls230.6401 311.811 m204.5 263.6343 189.833 208.4028 190.2983 149.7715 c190.7271 95.834 203.9214 44.9805 226.9717 0 C510.2363 0 L510.2363 311.811 L230.6401 311.811 Ls226.0703 311.811 m200.2729 263.5327 185.8345 208.3452 186.2871 149.8125 c186.7036 95.9297 199.7104 45.0879 222.4746 0 C510.2363 0 L510.2363 311.811 L226.0703 311.811 Ls221.5361 311.811 m196.0688 263.4321 181.835 208.2915 182.2749 149.8516 c182.6797 96.0273 195.4878 45.1895 217.9697 0 C510.2363 0 L510.2363 311.811 L221.5361 311.811 Ls217.0088 311.811 m191.8643 263.3384 177.8354 208.2417 178.2632 149.8906 c178.6567 96.1191 191.2861 45.291 213.4956 0 C510.2363 0 L510.2363 311.811 L217.0088 311.811 Ls212.5029 311.811 m187.6724 263.2456 173.8359 208.1938 174.251 149.9297 c174.6338 96.209 187.0938 45.3887 209.0396 0 C510.2363 0 L510.2363 311.811 L212.5029 311.811 Ls208.0024 311.811 m183.4785 263.1577 169.8364 208.147 170.2397 149.9707 c170.6123 96.2969 182.9004 45.4824 204.5859 0 C510.2363 0 L510.2363 311.811 L208.0024 311.811 Ls203.5239 311.811 m179.2974 263.0728 165.8359 208.105 166.2275 150.0098 c166.5898 96.3809 178.7207 45.5742 200.1563 0 C510.2363 0 L510.2363 311.811 L203.5239 311.811 Ls199.0459 311.811 m175.1123 262.9917 161.835 208.063 162.2163 150.0488 c162.5679 96.4648 174.5381 45.666 195.7271 0 C510.2363 0 L510.2363 311.811 L199.0459 311.811 Ls194.5938 311.811 m170.9424 262.9126 157.8345 208.0249 158.2041 150.0898 c158.5459 96.5449 170.3643 45.752 191.3135 0 C510.2363 0 L510.2363 311.811 L194.5938 311.811 Ls190.1401 311.811 m166.7671 262.8384 153.8335 207.9878 154.1929 150.127 c154.5249 96.627 166.1948 45.8359 186.9102 0 C510.2363 0 L510.2363 311.811 L190.1401 311.811 Ls185.707 311.811 m162.604 262.7661 149.8325 207.9526 150.1812 150.168 c150.5039 96.7051 162.0225 45.9199 182.5078 0 C510.2363 0 L510.2363 311.811 L185.707 311.811 Ls181.2793 311.811 m158.4409 262.6958 145.8306 207.9194 146.1694 150.207 c146.4829 96.7813 157.8652 46 178.1289 0 C510.2363 0 L510.2363 311.811 L181.2793 311.811 Ls176.8608 311.811 m154.2813 262.6294 141.8291 207.8872 142.1577 150.248 c142.4619 96.8574 153.7051 46.0781 173.75 0 C510.2363 0 L510.2363 311.811 L176.8608 311.811 Ls172.4561 311.811 m150.1284 262.564 137.8271 207.8589 138.146 150.2871 c138.4409 96.9297 149.5464 46.1543 169.3784 0 C510.2363 0 L510.2363 311.811 L172.4561 311.811 Ls168.0518 311.811 m145.9712 262.5024 133.8242 207.8286 134.1333 150.3262 c134.4209 97.002 145.3984 46.2266 165.0225 0 C510.2363 0 L510.2363 311.811 L168.0518 311.811 Ls163.6694 311.811 m141.8291 262.4419 129.8218 207.8032 130.1221 150.3672 c130.4014 97.0742 141.2485 46.3008 160.668 0 C510.2363 0 L510.2363 311.811 L163.6694 311.811 Ls159.2871 311.811 m137.6836 262.3843 125.8188 207.7778 126.1104 150.4063 c126.3804 97.1445 137.1006 46.3711 156.3203 0 C510.2363 0 L510.2363 311.811 L159.2871 311.811 Ls154.9116 311.811 m133.5386 262.3296 121.8159 207.7524 122.0986 150.4453 c122.3608 97.2129 132.9624 46.4414 151.9878 0 C510.2363 0 L510.2363 311.811 L154.9116 311.811 Ls150.5527 311.811 m129.4058 262.2759 117.814 207.7319 118.0869 150.4863 c118.3418 97.2813 128.8218 46.5078 147.6558 0 C510.2363 0 L510.2363 311.811 L150.5527 311.811 Ls146.1938 311.811 m125.2681 262.2241 113.8101 207.7104 114.0752 150.5234 c114.3223 97.3477 124.6816 46.5742 143.3286 0 C510.2363 0 L510.2363 311.811 L146.1938 311.811 Ls141.8433 311.811 m121.1348 262.1733 109.8066 207.6899 110.064 150.5645 c110.3027 97.4121 120.5542 46.6387 139.0181 0 C510.2363 0 L510.2363 311.811 L141.8433 311.811 Ls137.5059 311.811 m117.0083 262.1255 105.8027 207.6724 106.0513 150.6055 c106.2832 97.4766 116.4224 46.7031 134.7075 0 C510.2363 0 L510.2363 311.811 L137.5059 311.811 Ls133.168 311.811 m112.8789 262.0796 101.7993 207.6548 102.0405 150.6426 c102.2651 97.541 112.2896 46.7617 130.3979 0 C510.2363 0 L510.2363 311.811 L133.168 311.811 Ls128.8384 311.811 m108.7529 262.0337 97.7949 207.6372 98.0283 150.6836 c98.2456 97.6035 108.167 46.8242 126.1045 0 C510.2363 0 L510.2363 311.811 L128.8384 311.811 Ls124.521 311.811 m104.6353 261.9897 93.791 207.6216 94.0166 150.7227 c94.2266 97.6641 104.0464 46.8828 121.8145 0 C510.2363 0 L510.2363 311.811 L124.521 311.811 Ls120.2051 311.811 m100.5142 261.9487 89.7871 207.6079 90.0049 150.7637 c90.2085 97.7246 99.9233 46.9414 117.5259 0 C510.2363 0 L510.2363 311.811 L120.2051 311.811 Ls115.8916 311.811 m96.3936 261.9087 85.7827 207.5933 85.9937 150.8027 c86.1895 97.7871 95.8008 46.9961 113.2407 0 C510.2363 0 L510.2363 311.811 L115.8916 311.811 Ls111.5942 311.811 m92.2847 261.8687 81.7778 207.5815 81.9814 150.8418 c82.1719 97.8438 91.6904 47.0547 108.9717 0 C510.2363 0 L510.2363 311.811 L111.5942 311.811 Ls107.2979 311.811 m88.1714 261.8315 77.7734 207.5698 77.9702 150.8828 c78.1538 97.9023 87.5771 47.1094 104.7026 0 C510.2363 0 L510.2363 311.811 L107.2979 311.811 Ls103 311.811 m84.0557 261.7944 73.7686 207.5581 73.9585 150.9199 c74.1353 97.9609 83.4619 47.1621 100.4336 0 C510.2363 0 L510.2363 311.811 L103 311.811 Ls98.7173 311.811 m79.9507 261.7603 69.7632 207.5483 69.9463 150.9609 c70.1172 98.0176 79.3486 47.2148 96.1704 0 C510.2363 0 L510.2363 311.811 L98.7173 311.811 Ls94.4395 311.811 m75.8467 261.7251 65.7578 207.5415 65.9341 151 c66.0991 98.0742 75.2451 47.2656 91.9199 0 C510.2363 0 L510.2363 311.811 L94.4395 311.811 Ls90.1616 311.811 m71.7407 261.6929 61.7534 207.5327 61.9229 151.0391 c62.0815 98.127 71.1411 47.3164 87.6709 0 C510.2363 0 L510.2363 311.811 L90.1616 311.811 Ls85.8853 311.811 m67.6318 261.6606 57.7476 207.5239 57.9106 151.0801 c58.064 98.1836 67.0337 47.3672 83.4209 0 C510.2363 0 L510.2363 311.811 L85.8853 311.811 Ls81.6255 311.811 m63.5371 261.6294 53.7422 207.5181 53.8989 151.1191 c54.0464 98.2383 62.9263 47.4141 79.1729 0 C510.2363 0 L510.2363 311.811 L81.6255 311.811 Ls77.3662 311.811 m59.4395 261.6001 49.7368 207.5122 49.8877 151.1602 c50.0288 98.291 58.8311 47.4648 74.9419 0 C510.2363 0 L510.2363 311.811 L77.3662 311.811 Ls73.1064 311.811 m55.3394 261.5718 45.731 207.5063 45.8755 151.1973 c46.0122 98.3438 54.7344 47.5117 70.7104 0 C510.2363 0 L510.2363 311.811 L73.1064 311.811 Ls68.8491 311.811 m51.2388 261.5444 41.7251 207.5005 41.8643 151.2383 c41.9946 98.3945 50.6353 47.5586 66.4795 0 C510.2363 0 L510.2363 311.811 L68.8491 311.811 Ls64.6079 311.811 m47.1504 261.5171 37.7197 207.4985 37.8521 151.2773 c37.9771 98.4492 46.5352 47.6035 62.249 0 C510.2363 0 L510.2363 311.811 L64.6079 311.811 Ls60.3667 311.811 m43.0601 261.4907 33.7134 207.4956 33.8408 151.3164 c33.9604 98.5 42.4409 47.6484 58.0264 0 C510.2363 0 L510.2363 311.811 L60.3667 311.811 Ls56.1245 311.811 m38.9668 261.4653 29.707 207.4927 29.8286 151.3574 c29.9434 98.5508 38.3521 47.6934 53.8125 0 C510.2363 0 L510.2363 311.811 L56.1245 311.811 Ls51.8818 311.811 m34.8706 261.4429 25.7007 207.4888 25.8169 151.3965 c25.9263 98.6016 34.2617 47.7383 49.5991 0 C510.2363 0 L510.2363 311.811 L51.8818 311.811 Ls47.6558 311.811 m30.7881 261.4175 21.6948 207.4888 21.8052 151.4355 c21.9097 98.6504 30.1709 47.7793 45.3867 0 C510.2363 0 L510.2363 311.811 L47.6558 311.811 Ls43.4312 311.811 m26.7041 261.394 17.688 207.4888 17.7935 151.4766 c17.8926 98.6992 26.0776 47.8223 41.1733 0 C510.2363 0 L510.2363 311.811 L43.4312 311.811 Ls39.2061 311.811 m22.6177 261.3735 13.6816 207.4878 13.7817 151.5156 c13.876 98.75 21.9902 47.8633 36.9683 0 C510.2363 0 L510.2363 311.811 L39.2061 311.811 Ls34.9814 311.811 m18.5303 261.3521 9.67578 207.4868 9.77051 151.5547 c9.85986 98.7969 17.9092 47.9063 32.7725 0 C510.2363 0 L510.2363 311.811 L34.9814 311.811 Ls30.7617 311.811 m14.4448 261.3325 5.66846 207.4868 5.7583 151.5938 c5.84326 98.8438 13.8262 47.9453 28.5752 0 C510.2363 0 L510.2363 311.811 L30.7617 311.811 Ls26.5527 311.811 m10.3682 261.312 1.66162 207.4888 1.74707 151.6348 c1.82715 98.8906 9.7417 47.9863 24.3794 0 C510.2363 0 L510.2363 311.811 L26.5527 311.811 Ls22.3442 311.811 m11.1104 276.4614 3.52441 239.4995 0 201.3696 C0 103.3691 L3.2959 67.7676 10.144 33.1934 20.1841 0 C510.2363 0 L510.2363 311.811 L22.3442 311.811 Ls18.1362 311.811 m10.2153 286.6802 4.12061 260.7437 0 234.1616 C0 70.6543 L3.73975 46.5273 9.11084 22.9395 15.9922 0 C510.2363 0 L510.2363 311.811 L18.1362 311.811 Ls13.9268 311.811 m8.34766 293.9595 3.70068 275.6997 0 257.1011 C0 47.6836 L3.21875 31.5137 7.17529 15.6094 11.8193 0 C510.2363 0 L510.2363 311.811 L13.9268 311.811 Ls9.72363 311.811 m6.07861 300.0522 2.84473 288.1157 0 276.0298 C0 28.7637 L2.28174 19.0723 4.83057 9.48242 7.62891 0 C510.2363 0 L510.2363 311.811 L9.72363 311.811 Ls5.53125 311.811 m3.57178 305.438 1.72852 299.0151 0 292.5464 C0 12.3164 L1.10205 8.18945 2.25635 4.08594 3.45264 0 C510.2363 0 L510.2363 311.811 L5.53125 311.811 Ls1.33838 311.811 m0.878906 310.3042 0.446777 308.7856 0 307.2739 C0 0 L510.2363 0 L510.2363 311.811 L1.33838 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L510.2363 0 L510.2363 311.811 L0 311.811 LsUu4.39795 311.811 m0 311.811 L0 306.3423 L1.72314 307.9536 3.20459 309.7964 4.39795 311.811 Cs8.83398 311.811 m0 311.811 L0 301.2954 L3.77246 304.0503 6.80127 307.6704 8.83398 311.811 Cs13.1509 311.811 m0 311.811 L0 296.5864 L5.91699 300.1694 10.5083 305.5317 13.1509 311.811 Cs17.3984 311.811 m0 311.811 L0 292.0718 L8.10449 296.2896 14.2896 303.3823 17.3984 311.811 Cs21.5962 311.811 m0 311.811 L0 287.6646 L10.3179 292.3833 18.1167 301.2222 21.5962 311.811 Cs25.7515 311.811 m0 311.811 L0 283.3472 L12.5381 288.4741 21.9717 299.0571 25.7515 311.811 Cs29.8813 311.811 m0 311.811 L0 279.0962 L14.7603 284.563 25.8511 296.8882 29.8813 311.811 Cs34.0059 311.811 m0 311.811 L0 274.8853 L16.9922 280.6372 29.7661 294.7095 34.0059 311.811 Cs38.0933 311.811 m0 311.811 L0 270.7026 L19.2188 276.6987 33.6719 292.5317 38.0933 311.811 Cs42.1934 311.811 m0 311.811 L0 266.5532 L21.4517 272.7622 37.6182 290.3462 42.1934 311.811 Cs46.2554 311.811 m0 311.811 L0 262.4243 L23.6763 268.8169 41.542 288.1636 46.2554 311.811 Cs50.3301 311.811 m0 311.811 L0 258.2974 L25.9092 264.8521 45.4961 285.9712 50.3301 311.811 Cs54.3994 311.811 m0 311.811 L0 254.2046 L28.1372 260.9048 49.4595 283.7817 54.3994 311.811 Cs58.4419 311.811 m0 311.811 L0 250.1196 L30.3589 256.9517 53.4058 281.5913 58.4419 311.811 Cs62.4932 311.811 m0 311.811 L0 246.0386 L32.5854 252.9858 57.3706 279.396 62.4932 311.811 Cs66.5518 311.811 m0 311.811 L0 241.9595 L34.8149 249.0112 61.353 277.1987 66.5518 311.811 Cs70.6089 311.811 m0 311.811 L0 237.8833 L37.0439 245.0288 65.3403 274.9995 70.6089 311.811 Cs74.6455 311.811 m0 311.811 L0 233.8345 L39.2651 241.0679 69.312 272.8013 74.6455 311.811 Cs78.688 311.811 m0 311.811 L0 229.7886 L41.4883 237.104 73.2959 270.603 78.688 311.811 Cs82.7275 311.811 m0 311.811 L0 225.7446 L43.71 233.1333 77.2813 268.4028 82.7275 311.811 Cs86.7578 311.811 m0 311.811 L0 221.7017 L45.9302 229.1587 81.2603 266.2036 86.7578 311.811 Cs90.791 311.811 m0 311.811 L0 217.6382 L48.1553 225.1538 85.2471 263.9985 90.791 311.811 Cs94.8281 311.811 m0 311.811 L0 213.603 L50.376 221.1763 89.2407 261.7954 94.8281 311.811 Cs98.8579 311.811 m0 311.811 L0 209.5688 L52.5967 217.1968 93.2314 259.5933 98.8579 311.811 Cs102.8833 311.811 m0 311.811 L0 205.5337 L54.8149 213.2144 97.2178 257.3901 102.8833 311.811 Cs106.9092 311.811 m0 311.811 L0 201.5024 L57.0347 209.229 101.2085 255.186 106.9092 311.811 Cs110.9375 311.811 m0 311.811 L0 197.4712 L59.2539 205.2417 105.2051 252.981 110.9375 311.811 Cs114.9688 311.811 m0 311.811 L0 193.4458 L61.4741 201.2563 109.2051 250.7749 114.9688 311.811 Cs118.9951 311.811 m0 311.811 L0 189.4253 L63.6914 197.2769 113.2031 248.5698 118.9951 311.811 Cs123.0146 311.811 m0 311.811 L0 185.4038 L65.9082 193.2925 117.1938 246.3657 123.0146 311.811 Cs127.0361 311.811 m0 311.811 L0 181.3843 L68.1245 189.3081 121.1885 244.1597 127.0361 311.811 Cs131.0581 311.811 m0 311.811 L0 177.3647 L70.3418 185.3208 125.186 241.9536 131.0581 311.811 Cs135.0806 311.811 m0 311.811 L0 173.3462 L72.5586 181.3345 129.1855 239.7466 135.0806 311.811 Cs139.104 311.811 m0 311.811 L0 169.3286 L74.7754 177.3452 133.1875 237.5386 139.104 311.811 Cs143.1289 311.811 m0 311.811 L0 165.3101 L76.9932 173.355 137.1919 235.3315 143.1289 311.811 Cs147.1548 311.811 m0 311.811 L0 161.2925 L79.21 169.3628 141.1978 233.1226 147.1548 311.811 Cs151.1733 311.811 m0 311.811 L0 157.2769 L81.4248 165.3726 145.1968 230.9155 151.1733 311.811 Cs155.189 311.811 m0 311.811 L0 153.2598 L83.6401 161.3794 149.1938 228.7085 155.189 311.811 Cs159.2056 311.811 m0 311.811 L0 149.2461 L85.8555 157.3892 153.1924 226.5005 159.2056 311.811 Cs163.2231 311.811 m0 311.811 L0 145.2363 L88.0703 153.4004 157.1929 224.2925 163.2231 311.811 Cs167.2407 311.811 m0 311.811 L0 141.2285 L90.2847 149.4141 161.1943 222.0845 167.2407 311.811 Cs171.2588 311.811 m0 311.811 L0 137.2188 L92.4995 145.4258 165.1978 219.8765 171.2588 311.811 Cs175.2783 311.811 m0 311.811 L0 133.209 L94.7144 141.4355 169.2026 217.6685 175.2783 311.811 Cs179.2979 311.811 m0 311.811 L0 129.2012 L96.9292 137.4473 173.2075 215.4585 179.2979 311.811 Cs183.3179 311.811 m0 311.811 L0 125.1953 L99.144 133.457 177.2144 213.2505 183.3179 311.811 Cs187.3379 311.811 m0 311.811 L0 121.1855 L101.3584 129.4668 181.2217 211.0415 187.3379 311.811 Cs191.3599 311.811 m0 311.811 L0 117.1777 L103.5732 125.4746 185.231 208.8315 191.3599 311.811 Cs195.3809 311.811 m0 311.811 L0 113.1719 L105.7881 121.4824 189.2407 206.6216 195.3809 311.811 Cs199.3955 311.811 m0 311.811 L0 109.1641 L108.0015 117.4902 193.2441 204.4126 199.3955 311.811 Cs203.4087 311.811 m0 311.811 L0 105.1563 L110.2153 113.498 197.2451 202.2026 203.4087 311.811 Cs207.4219 311.811 m0 311.811 L0 101.1504 L112.4287 109.5059 201.2476 199.9937 207.4219 311.811 Cs211.4365 311.811 m0 311.811 L0 97.1426 L114.6416 105.5117 205.25 197.7847 211.4365 311.811 Cs215.4502 311.811 m0 311.811 L0 93.1367 L116.855 101.5176 209.2544 195.5757 215.4502 311.811 Cs219.4644 311.811 m0 311.811 L0 89.1309 L119.0684 97.5254 213.2588 193.3657 219.4644 311.811 Cs223.4795 311.811 m0 311.811 L0 85.125 L121.2817 93.5313 217.2637 191.1558 223.4795 311.811 Cs227.4946 311.811 m0 311.811 L0 81.1191 L123.4956 89.5352 221.269 188.9458 227.4946 311.811 Cs231.5098 311.811 m0 311.811 L0 77.1133 L125.7085 85.541 225.2754 186.7358 231.5098 311.811 Cs235.5244 311.811 m0 311.811 L0 73.1055 L127.9214 81.5449 229.2817 184.5269 235.5244 311.811 Cs239.5405 311.811 m0 311.811 L0 69.0996 L130.1353 77.5508 233.2881 182.3159 239.5405 311.811 Cs243.5566 311.811 m0 311.811 L0 65.0957 L132.3486 73.5547 237.2974 180.105 243.5566 311.811 Cs247.5728 311.811 m0 311.811 L0 61.0879 L134.561 69.5586 241.3052 177.895 247.5728 311.811 Cs251.5889 311.811 m0 311.811 L0 57.084 L136.7749 65.5625 245.3125 175.6841 251.5889 311.811 Cs255.6055 311.811 m0 311.811 L0 53.0781 L138.9883 61.5664 249.3228 173.4731 255.6055 311.811 Cs259.6211 311.811 m0 311.811 L0 49.0762 L141.2017 57.5723 253.3335 171.2622 259.6211 311.811 Cs263.6396 311.811 m0 311.811 L0 45.0742 L143.4141 53.5801 257.3428 169.0513 263.6396 311.811 Cs267.6563 311.811 m0 311.811 L0 41.0742 L145.6279 49.5898 261.3525 166.8413 267.6563 311.811 Cs271.6729 311.811 m0 311.811 L0 37.0723 L147.8403 45.5957 265.3633 164.6304 271.6729 311.811 Cs275.6904 311.811 m0 311.811 L0 33.0703 L150.0532 41.6035 269.375 162.4194 275.6904 311.811 Cs279.707 311.811 m0 311.811 L0 29.0703 L152.2656 37.6094 273.3857 160.2095 279.707 311.811 Cs283.7246 311.811 m0 311.811 L0 25.0723 L154.4785 33.6172 277.3965 157.9985 283.7246 311.811 Cs287.7393 311.811 m0 311.811 L0 21.0684 L156.6904 29.625 281.4053 155.7876 287.7393 311.811 Cs291.751 311.811 m0 311.811 L0 17.0684 L158.9028 25.6309 285.4102 153.5762 291.751 311.811 Cs295.7627 311.811 m0 311.811 L0 13.0703 L161.1147 21.6387 289.416 151.3672 295.7627 311.811 Cs299.7734 311.811 m0 311.811 L0 9.06836 L163.3257 17.6465 293.4209 149.1563 299.7734 311.811 Cs303.7861 311.811 m0 311.811 L0 5.06836 L165.5376 13.6504 297.4277 146.9453 303.7861 311.811 Cs307.7969 311.811 m0 311.811 L0 1.06836 L167.7505 9.65625 301.4346 144.7344 307.7969 311.811 Cs311.8105 311.811 m0 311.811 L0 0 L30.2534 0 L185.7803 22.248 305.8223 152.7012 311.8105 311.811 Cs315.8223 311.811 m0 311.811 L0 0 L53.0361 0 L199.5879 31.209 310.1182 158.3462 315.8223 311.811 Cs319.835 311.811 m0 311.811 L0 0 L70.2437 0 L210.3984 37.2715 314.3389 162.1909 319.835 311.811 Cs323.8467 311.811 m0 311.811 L0 0 L84.6455 0 L219.7051 41.9121 318.5225 165.1362 323.8467 311.811 Cs327.876 311.811 m0 311.811 L0 0 L97.4297 0 L228.1572 45.7188 322.7031 167.5659 327.876 311.811 Cs331.8906 311.811 m0 311.811 L0 0 L108.9922 0 L235.9521 48.9297 326.8486 169.6138 331.8906 311.811 Cs335.9033 311.811 m0 311.811 L0 0 L119.7329 0 L243.3145 51.7168 330.9834 171.4067 335.9033 311.811 Cs339.9189 311.811 m0 311.811 L0 0 L129.8008 0 L250.3218 54.1719 335.1074 172.9907 339.9189 311.811 Cs343.9326 311.811 m0 311.811 L0 0 L139.3564 0 L257.0596 56.377 339.2266 174.4204 343.9326 311.811 Cs347.9473 311.811 m0 311.811 L0 0 L148.4009 0 L263.5283 58.3438 343.333 175.6919 347.9473 311.811 Cs351.9609 311.811 m0 311.811 L0 0 L157.0581 0 L269.7959 60.1328 347.4385 176.8472 351.9609 311.811 Cs355.9766 311.811 m0 311.811 L0 0 L165.3882 0 L275.8926 61.7676 351.5361 177.9067 355.9766 311.811 Cs359.9912 311.811 m0 311.811 L0 0 L173.4424 0 L281.8467 63.2734 355.6309 178.8833 359.9912 311.811 Cs364.0059 311.811 m0 311.811 L0 0 L181.2661 0 L287.6846 64.666 359.7207 179.7925 364.0059 311.811 Cs368.0186 311.811 m0 311.811 L0 0 L188.9014 0 L293.4258 65.959 363.8057 180.6489 368.0186 311.811 Cs372.0313 311.811 m0 311.811 L0 0 L196.2998 0 L299.0439 67.1641 367.8887 181.436 372.0313 311.811 Cs376.0439 311.811 m0 311.811 L0 0 L203.5352 0 L304.5781 68.2891 371.9658 182.1772 376.0439 311.811 Cs380.0566 311.811 m0 311.811 L0 0 L210.5981 0 L310.0244 69.3418 376.04 182.8696 380.0566 311.811 Cs384.0693 311.811 m0 311.811 L0 0 L217.519 0 L315.3975 70.334 380.1133 183.522 384.0693 311.811 Cs388.082 311.811 m0 311.811 L0 0 L224.312 0 L320.707 71.2656 384.1826 184.1401 388.082 311.811 Cs392.0938 311.811 m0 311.811 L0 0 L230.9873 0 L325.958 72.1504 388.2529 184.7241 392.0938 311.811 Cs396.1055 311.811 m0 311.811 L0 0 L237.5508 0 L331.1523 72.9824 392.3174 185.2788 396.1055 311.811 Cs400.1191 311.811 m0 311.811 L0 0 L244.0117 0 L336.2959 73.7734 396.3848 185.8042 400.1191 311.811 Cs404.1328 311.811 m0 311.811 L0 0 L250.3735 0 L341.3896 74.5234 400.4473 186.3032 404.1328 311.811 Cs408.1455 311.811 m0 311.811 L0 0 L256.6475 0 L346.4385 75.2383 404.5078 186.7798 408.1455 311.811 Cs412.1582 311.811 m0 311.811 L0 0 L262.8389 0 L351.4482 75.9199 408.5684 187.2339 412.1582 311.811 Cs416.1699 311.811 m0 311.811 L0 0 L268.9512 0 L356.418 76.5684 412.627 187.6675 416.1699 311.811 Cs420.1836 311.811 m0 311.811 L0 0 L274.9893 0 L361.3496 77.1875 416.6836 188.0825 420.1836 311.811 Cs424.1973 311.811 m0 311.811 L0 0 L280.958 0 L366.248 77.7773 420.7402 188.479 424.1973 311.811 Cs428.21 311.811 m0 311.811 L0 0 L286.8672 0 L371.1172 78.3457 424.7939 188.8608 428.21 311.811 Cs432.2236 311.811 m0 311.811 L0 0 L292.7148 0 L375.958 78.8887 428.8477 189.2271 432.2236 311.811 Cs436.2354 311.811 m0 311.811 L0 0 L298.5098 0 L380.7734 79.4102 432.9004 189.5796 436.2354 311.811 Cs440.25 311.811 m0 311.811 L0 0 L304.2549 0 L385.5645 79.9102 436.9521 189.9185 440.25 311.811 Cs444.2627 311.811 m0 311.811 L0 0 L309.9346 0 L390.3203 80.3887 441.0039 190.2427 444.2627 311.811 Cs448.2754 311.811 m0 311.811 L0 0 L315.5703 0 L395.0557 80.8535 445.0527 190.5552 448.2754 311.811 Cs452.2891 311.811 m0 311.811 L0 0 L321.165 0 L399.7744 81.2969 449.1006 190.8589 452.2891 311.811 Cs456.3027 311.811 m0 311.811 L0 0 L326.7178 0 L404.4727 81.7246 453.1484 191.1519 456.3027 311.811 Cs460.3164 311.811 m0 311.811 L0 0 L332.2178 0 L409.1426 82.1387 457.1963 191.4312 460.3164 311.811 Cs464.3301 311.811 m0 311.811 L0 0 L337.6855 0 L413.7988 82.5371 461.2432 191.7046 464.3301 311.811 Cs468.3418 311.811 m0 311.811 L0 0 L343.1221 0 L418.4414 82.9219 465.2881 191.9692 468.3418 311.811 Cs472.3564 311.811 m0 311.811 L0 0 L348.5059 0 L423.0566 83.293 469.334 192.2212 472.3564 311.811 Cs476.3711 311.811 m0 311.811 L0 0 L353.8662 0 L427.6631 83.6523 473.3779 192.4683 476.3711 311.811 Cs480.3838 311.811 m0 311.811 L0 0 L359.1924 0 L432.252 84 477.4209 192.7065 480.3838 311.811 Cs484.3965 311.811 m0 311.811 L0 0 L364.4795 0 L436.8213 84.3359 481.4648 192.938 484.3965 311.811 Cs488.4111 311.811 m0 311.811 L0 0 L369.752 0 L441.3867 84.6602 485.5068 193.1626 488.4111 311.811 Cs492.4248 311.811 m0 311.811 L0 0 L374.9766 0 L445.9258 84.9766 489.5488 193.3784 492.4248 311.811 Cs496.4375 311.811 m0 311.811 L0 0 L380.1846 0 L450.46 85.2813 493.5898 193.5903 496.4375 311.811 Cs500.4521 311.811 m0 311.811 L0 0 L385.3604 0 L454.9775 85.5781 497.6309 193.7944 500.4521 311.811 Cs504.4648 311.811 m0 311.811 L0 0 L390.5117 0 L459.4824 85.8633 501.6689 193.9937 504.4648 311.811 Cs508.4766 311.811 m0 311.811 L0 0 L395.6357 0 L463.9766 86.1426 505.707 194.188 508.4766 311.811 Cs0 311.811 m0 0 L400.7354 0 L461.084 77.0039 500.4395 171.1196 510.2363 273.8032 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L405.8154 0 L459.3477 69.1348 496.1445 151.7676 510.2363 241.8765 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L410.8691 0 L459.3818 63.3984 493.9932 137.9043 510.2363 219.0044 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L415.9033 0 L460.2246 58.5996 492.8086 126.4961 510.2363 200.2075 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L420.915 0 L461.5352 54.3262 492.1982 116.4707 510.2363 183.7466 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L425.9063 0 L463.1963 50.4375 491.9883 107.4844 510.2363 169.0317 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L430.8818 0 L465.0801 46.7754 492.0732 99.1172 510.2363 155.396 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L435.8301 0 L467.1738 43.3418 492.3838 91.3711 510.2363 142.8184 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L440.7734 0 L469.4219 40.0449 492.8838 84.0195 510.2363 130.9355 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L445.6826 0 L471.7822 36.8711 493.5322 77.0117 510.2363 119.668 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L450.5898 0 L474.2578 33.791 494.3164 70.2754 510.2363 108.8867 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L455.4678 0 L476.8193 30.8008 495.208 63.7949 510.2363 98.5684 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L460.3359 0 L479.4658 27.8789 496.1963 57.5195 510.2363 88.627 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L465.1904 0 L482.1875 25.0215 497.2705 51.4395 510.2363 79.043 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L470.0225 0 L484.9678 22.2227 498.417 45.5273 510.2363 69.7676 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L474.8525 0 L487.8125 19.4629 499.6357 39.7383 510.2363 60.7344 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L479.6523 0 L490.6973 16.748 500.9102 34.0898 510.2363 51.9629 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L484.4463 0 L493.6348 14.0645 502.2422 28.541 510.2363 43.3945 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L489.2334 0 L496.6191 11.4141 503.625 23.0977 510.2363 35.0273 C510.2363 311.811 L0 311.811 Ls0 311.811 m0 0 L493.9912 0 L499.6338 8.80078 505.0459 17.7656 510.2363 26.8711 C510.2363 311.811 L0 311.811 LsUULB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(HABILLAGE) Ln0 A1 Ap0 O0.774868 0.225376 0.049897 0 0 0.6 0.796078 Xa0 J 0 j 1 w 10 M []0 d0 XR510.2363 255.1182 m0 255.1182 L0 311.811 L510.2363 311.811 L510.2363 255.1182 Lf4 M496.0625 70.8652 m14.1733 70.8652 L14.1733 4.86523 L496.0625 4.86523 L496.0625 70.8652 Ln0 Ap0 R0.860075 0.849699 0.789548 1 0 0 0 XA0.5 w [2 4 ]0 d255.1182 183.8574 m255.1182 63.7793 LSuu0 O0 0 0 0 1 1 1 Xa1 w 10 M []0 d1 XR46.7295 295.4375 m47.0781 292.394 41.7598 292.375 41.4453 294.8501 C41.2295 298.9121 46.4131 299.0684 46.7295 295.4375 Cf*u84.8945 277.2358 m85.1484 275.0244 83.6543 274.562 82.5459 273.7129 C77.6943 275.5161 78.0283 282.5049 71.9766 283.1074 C69.5186 281.4561 70.4863 276.3774 67.2803 275.4746 C65.5674 275.3271 65.2539 276.5801 64.3438 277.2358 C63.6328 282.708 68.3535 280.686 69.6279 283.1074 C69.0283 284.4644 66.9287 284.3223 64.9316 284.2817 C64.7539 287.1992 64.8271 289.8662 66.6924 290.7402 C68.3965 290.291 70.0703 289.8115 70.8027 288.3916 C72.623 290.7354 73.7158 293.9526 71.3896 296.0244 C81.4189 299.7231 78.2148 280.73 84.8945 277.2358 Cf1 D76.6738 284.2817 m75.0225 285.9575 75.6865 289.9482 73.7383 291.3271 C73.6406 289.6641 72.6621 288.8809 72.5645 287.2173 C74.1807 286.8486 75.5518 283.1978 76.6738 284.2817 Cf*U*u0 D103.0957 292.5015 m111.6055 294.3774 111.4277 278.0132 103.6826 278.4102 c97.0479 278.75 96.46 291.0391 103.0957 292.5015 cf1 D103.6826 282.52 m104.6611 282.52 105.6396 282.52 106.6182 282.52 C107.4658 283.8262 108.0928 285.3516 107.793 287.8047 C104.7588 292.21 100.5313 285.7646 103.6826 282.52 Cf*U0 D84.8945 292.5015 m92.0439 291.1748 92.3799 273.5215 83.1328 280.1719 C82.876 282.1904 83.3643 283.4624 83.7197 284.8687 C84.3574 284.7236 84.1182 283.7012 84.8945 283.6943 C86.4209 285.8379 81.542 290.1504 84.8945 292.5015 Cf95.4629 292.5015 m95.1523 286.9063 97.584 284.0542 97.8115 278.9971 C102.6094 276.8218 112.2051 276.7285 118.3613 277.8232 C117.6895 268.3931 104.4629 272.877 99.5732 275.4746 C98.9932 263.5254 83.7295 274.4141 93.7012 278.9971 C92.7539 283.1948 88.501 291.9014 95.4629 292.5015 Cf40.2715 290.1533 m41.1094 289.354 43.1172 292.3662 46.1426 291.3271 C48.9248 288.4341 48.5029 282.3354 48.4912 276.6489 C41.1133 272.647 41.1563 281.5659 40.8584 287.2173 C37.9619 284.438 36.4238 280.3008 30.29 280.7588 C29.3066 279.7847 29.8223 277.3115 29.7021 275.4746 C36.4648 272.6802 49.0723 273.4502 56.7109 274.8872 C50.2617 275.8481 46.2354 284.3188 51.4268 289.5659 c56.7451 294.9419 68.3545 287.521 59.0596 283.6943 C56.8232 285.145 59.8105 285.4316 58.4727 286.6304 C57.0732 287.8569 55.3916 285.8071 54.9502 284.2817 C54.8223 280.3257 59.3467 280.2979 62.583 281.3457 C65.5645 277.7827 60.3389 277.7627 58.4727 275.4746 c57.2646 273.9932 57.5723 270.9141 55.5371 269.603 c48.418 265.019 36.5713 271.0156 29.1152 271.9517 C24.1523 262.9678 12.1606 274.8213 24.418 276.6489 C24.6162 281.9351 24.417 286.8242 23.2441 290.7402 C28.0352 293.0469 30.6455 288.4561 29.7021 283.1074 C33.4189 284.4995 33.4277 288.3315 33.2256 290.1533 c31.8271 302.7354 10.2373 291.1543 23.2441 286.043 C23.2305 279.9917 15.604 281.7339 14.437 286.043 c11.2422 297.8374 38.1123 304.0786 40.2715 290.1533 CfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF